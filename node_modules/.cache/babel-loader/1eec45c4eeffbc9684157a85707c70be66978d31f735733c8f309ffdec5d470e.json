{"ast":null,"code":"import { updateProduct } from '@/services/productService';\nimport { ComboBoxComponent as EjsCombobox } from \"@syncfusion/ej2-vue-dropdowns\";\nexport default {\n  components: {\n    EjsCombobox\n  },\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    },\n    productData: {\n      type: Object,\n      default: () => null\n    },\n    categories: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      updatedProduct: this.productData ? {\n        ...this.productData\n      } : {}\n    };\n  },\n  watch: {\n    productData(newProduct) {\n      if (newProduct) {\n        this.updatedProduct = {\n          ...newProduct\n        };\n      }\n    }\n  },\n  methods: {\n    async submitUpdate() {\n      const formData = new FormData();\n      const updatedProduct = {\n        name: this.updatedProduct.name,\n        description: this.updatedProduct.description,\n        price: this.updatedProduct.price.toFixed(2),\n        category: {\n          categoryId: this.updatedProduct.categoryId\n        }\n      };\n      formData.append('product', new Blob([JSON.stringify(updatedProduct)], {\n        type: 'application/json'\n      }));\n      console.log('Form Data:', formData);\n      try {\n        await updateProduct(this.updatedProduct.productId, formData);\n        this.$emit('update-product', formData);\n        this.$emit('close');\n      } catch (error) {\n        console.error('Error updating product:', error);\n      }\n    },\n    closeModal() {\n      this.$emit('close');\n    }\n  }\n};","map":{"version":3,"names":["updateProduct","ComboBoxComponent","EjsCombobox","components","props","isVisible","type","Boolean","required","productData","Object","default","categories","Array","data","updatedProduct","watch","newProduct","methods","submitUpdate","formData","FormData","name","description","price","toFixed","category","categoryId","append","Blob","JSON","stringify","console","log","productId","$emit","error","closeModal"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\modals\\UpdateProductModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isVisible\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"$emit('close')\">&times;</span>\r\n\r\n      <h3>Update Product</h3>\r\n\r\n      <form v-if=\"updatedProduct\">\r\n        <div>\r\n          <label for=\"name\">Product Name</label>\r\n          <input type=\"text\" id=\"name\" v-model=\"updatedProduct.name\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"description\">Description</label>\r\n          <input type=\"text\" id=\"description\" v-model=\"updatedProduct.description\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"price\">Price</label>\r\n          <input type=\"number\" id=\"price\" v-model=\"updatedProduct.price\" />\r\n        </div>\r\n\r\n        <div class=\"control_wrapper\">\r\n          <label for=\"category\">Category</label>\r\n          <div class=\"control_wrapper\">\r\n            <ejs-combobox\r\n                id=\"combobox\"\r\n                :dataSource=\"categories ? categories : []\"\r\n                placeholder=\"Select a category\"\r\n                v-model=\"updatedProduct.categoryId\"\r\n                :fields=\"{ text: 'name', value: 'categoryId' }\"\r\n            ></ejs-combobox>\r\n          </div>\r\n        </div>\r\n\r\n        <button type=\"button\" @click=\"submitUpdate\">Update</button>\r\n        <button type=\"button\" @click=\"closeModal\">Cancel</button>\r\n      </form>\r\n\r\n      <!-- Debugging purposes, display message if product is null -->\r\n      <p v-else>No product selected for update</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { updateProduct } from '@/services/productService';\r\nimport { ComboBoxComponent as EjsCombobox } from \"@syncfusion/ej2-vue-dropdowns\";\r\n\r\nexport default {\r\n  components: {\r\n    EjsCombobox\r\n  },\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    productData: {\r\n      type: Object,\r\n      default: () => null,\r\n    },\r\n    categories: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      updatedProduct: this.productData ? { ...this.productData } : {},\r\n    };\r\n  },\r\n  watch: {\r\n    productData(newProduct) {\r\n      if (newProduct) {\r\n        this.updatedProduct = { ...newProduct };\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    async submitUpdate() {\r\n      const formData = new FormData();\r\n\r\n      const updatedProduct = {\r\n        name: this.updatedProduct.name,\r\n        description: this.updatedProduct.description,\r\n        price: this.updatedProduct.price.toFixed(2),\r\n        category: { categoryId: this.updatedProduct.categoryId },\r\n      };\r\n\r\n      formData.append('product', new Blob([JSON.stringify(updatedProduct)], { type: 'application/json' }));\r\n\r\n      console.log('Form Data:', formData);\r\n      try {\r\n        await updateProduct(this.updatedProduct.productId, formData);\r\n        this.$emit('update-product', formData);\r\n        this.$emit('close');\r\n      } catch (error) {\r\n        console.error('Error updating product:', error);\r\n      }\r\n    },\r\n    closeModal() {\r\n      this.$emit('close');\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-right: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\nbutton.cancel-button {\r\n  background-color: #e74c3c;\r\n}\r\n\r\nbutton.cancel-button:hover {\r\n  background-color: #c0392b;\r\n}\r\n\r\n@import '~@syncfusion/ej2-base/styles/material.css';\r\n@import '~@syncfusion/ej2-inputs/styles/material.css';\r\n@import '~@syncfusion/ej2-vue-dropdowns/styles/material.css';\r\n</style>"],"mappings":"AA+CA,SAASA,aAAY,QAAS,2BAA2B;AACzD,SAASC,iBAAgB,IAAKC,WAAU,QAAS,+BAA+B;AAEhF,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAEA,CAAA,KAAM;IACjB,CAAC;IACDC,UAAU,EAAE;MACVN,IAAI,EAAEO,KAAK;MACXL,QAAQ,EAAE;IACZ;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,IAAI,CAACN,WAAU,GAAI;QAAE,GAAG,IAAI,CAACA;MAAY,IAAI,CAAC;IAChE,CAAC;EACH,CAAC;EACDO,KAAK,EAAE;IACLP,WAAWA,CAACQ,UAAU,EAAE;MACtB,IAAIA,UAAU,EAAE;QACd,IAAI,CAACF,cAAa,GAAI;UAAE,GAAGE;QAAW,CAAC;MACzC;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAE/B,MAAMN,cAAa,GAAI;QACrBO,IAAI,EAAE,IAAI,CAACP,cAAc,CAACO,IAAI;QAC9BC,WAAW,EAAE,IAAI,CAACR,cAAc,CAACQ,WAAW;QAC5CC,KAAK,EAAE,IAAI,CAACT,cAAc,CAACS,KAAK,CAACC,OAAO,CAAC,CAAC,CAAC;QAC3CC,QAAQ,EAAE;UAAEC,UAAU,EAAE,IAAI,CAACZ,cAAc,CAACY;QAAW;MACzD,CAAC;MAEDP,QAAQ,CAACQ,MAAM,CAAC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAAChB,cAAc,CAAC,CAAC,EAAE;QAAET,IAAI,EAAE;MAAmB,CAAC,CAAC,CAAC;MAEpG0B,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,QAAQ,CAAC;MACnC,IAAI;QACF,MAAMpB,aAAa,CAAC,IAAI,CAACe,cAAc,CAACmB,SAAS,EAAEd,QAAQ,CAAC;QAC5D,IAAI,CAACe,KAAK,CAAC,gBAAgB,EAAEf,QAAQ,CAAC;QACtC,IAAI,CAACe,KAAK,CAAC,OAAO,CAAC;MACrB,EAAE,OAAOC,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}