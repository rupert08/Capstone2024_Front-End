{"ast":null,"code":"import { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\nexport default {\n  components: {\n    UpdateOrderModal\n  },\n  data() {\n    return {\n      isAddModalVisible: false,\n      isUpdateModalVisible: false,\n      orders: [],\n      selectedOrder: null\n    };\n  },\n  methods: {\n    openAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal() {\n      this.isAddModalVisible = false;\n    },\n    openUpdateModal(order) {\n      this.selectedOrder = order;\n      this.isUpdateModalVisible = true;\n    },\n    closeUpdateModal() {\n      this.isUpdateModalVisible = false;\n    },\n    async updateOrder(updatedOrder) {\n      try {\n        await updateOrder(updatedOrder.orderID, updatedOrder);\n        this.fetchOrders(); // Refresh the orders list after update\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    },\n    async deleteOrder(orderID) {\n      try {\n        await deleteOrder(orderID);\n        this.fetchOrders(); // Refresh the orders list after deletion\n      } catch (error) {\n        console.error('Error deleting order:', error);\n      }\n    },\n    async fetchOrders() {\n      try {\n        this.orders = await getOrders();\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["getOrders","createOrder","updateOrder","deleteOrder","UpdateOrderModal","components","data","isAddModalVisible","isUpdateModalVisible","orders","selectedOrder","methods","openAddModal","closeAddModal","openUpdateModal","order","closeUpdateModal","updatedOrder","orderID","fetchOrders","error","console","mounted"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <!-- Add your table headers here -->\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Total Amount</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n          <!-- Add your table data here -->\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"deleteOrder(order.orderID)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"isAddModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <!-- Add your form for adding an order here -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Update Order Modal -->\r\n    <UpdateOrderModal\r\n      :isVisible=\"isUpdateModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeUpdateModal\"\r\n      @update-order=\"updateOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    UpdateOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      orders: [],\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  methods: {\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    async updateOrder(updatedOrder) {\r\n      try {\r\n        await updateOrder(updatedOrder.orderID, updatedOrder);\r\n        this.fetchOrders(); // Refresh the orders list after update\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    },\r\n    async deleteOrder(orderID) {\r\n      try {\r\n        await deleteOrder(orderID);\r\n        this.fetchOrders(); // Refresh the orders list after deletion\r\n      } catch (error) {\r\n        console.error('Error deleting order:', error);\r\n      }\r\n    },\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAoDA,SAASA,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAEC,WAAU,QAAS,yBAAyB;AAC1F,OAAOC,gBAAe,MAAO,+BAA+B;AAE5D,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,oBAAoB,EAAE,KAAK;MAC3BC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACL,iBAAgB,GAAI,IAAI;IAC/B,CAAC;IACDM,aAAaA,CAAA,EAAG;MACd,IAAI,CAACN,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACDO,eAAeA,CAACC,KAAK,EAAE;MACrB,IAAI,CAACL,aAAY,GAAIK,KAAK;MAC1B,IAAI,CAACP,oBAAmB,GAAI,IAAI;IAClC,CAAC;IACDQ,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACR,oBAAmB,GAAI,KAAK;IACnC,CAAC;IACD,MAAMN,WAAWA,CAACe,YAAY,EAAE;MAC9B,IAAI;QACF,MAAMf,WAAW,CAACe,YAAY,CAACC,OAAO,EAAED,YAAY,CAAC;QACrD,IAAI,CAACE,WAAW,CAAC,CAAC,EAAE;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMjB,WAAWA,CAACe,OAAO,EAAE;MACzB,IAAI;QACF,MAAMf,WAAW,CAACe,OAAO,CAAC;QAC1B,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAACV,MAAK,GAAI,MAAMT,SAAS,CAAC,CAAC;MACjC,EAAE,OAAOoB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}