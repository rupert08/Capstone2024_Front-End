{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1a70b1f0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Update Order\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"orderDate\"\n}, \"Order Date:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"orderStatus\"\n}, \"Order Status:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"paymentMethod\"\n}, \"Payment Method:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"shipping\"\n}, \"Shipping/Collected:\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"totalAmount\"\n}, \"Total Amount:\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_select = _resolveComponent(\"v-select\");\n  return _ctx.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, \"Ã—\"), _hoisted_3, _ctx.order ? (_openBlock(), _createElementBlock(\"form\", _hoisted_4, [_createCommentVNode(\" Order Date \"), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.orderForm.orderDate = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.orderDate]]), _createCommentVNode(\" Order Status \"), _hoisted_6, _createVNode(_component_v_select, {\n    options: _ctx.orderStatusOptions,\n    modelValue: $data.orderForm.orderStatus,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.orderForm.orderStatus = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"]), _createCommentVNode(\" Payment Method \"), _hoisted_7, _createVNode(_component_v_select, {\n    options: _ctx.paymentMethodOptions,\n    modelValue: $data.orderForm.paymentMethod,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.orderForm.paymentMethod = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"]), _createCommentVNode(\" Shipping/Collected \"), _hoisted_8, _createVNode(_component_v_select, {\n    options: _ctx.shippingOptions,\n    modelValue: _ctx.shippingOrCollectedString,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.shippingOrCollectedString = $event),\n    required: \"\"\n  }, null, 8 /* PROPS */, [\"options\", \"modelValue\"]), _createCommentVNode(\" Total Amount \"), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.orderForm.totalAmount = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.totalAmount]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.submitUpdate && _ctx.submitUpdate(...args))\n  }, \"Update Order\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[7] || (_cache[7] = (...args) => _ctx.closeModal && _ctx.closeModal(...args))\n  }, \"Cancel\")])) : _createCommentVNode(\"v-if\", true)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","for","_ctx","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","$event","$emit","_hoisted_3","order","_hoisted_4","_createCommentVNode","_hoisted_5","type","$data","orderForm","orderDate","required","_hoisted_6","_createVNode","_component_v_select","options","orderStatusOptions","modelValue","orderStatus","_hoisted_7","paymentMethodOptions","paymentMethod","_hoisted_8","shippingOptions","shippingOrCollectedString","_hoisted_9","totalAmount","args","submitUpdate","closeModal"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\modals\\UpdateOrderModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isVisible\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"$emit('close')\">&times;</span>\r\n\r\n      <h3>Update Order</h3>\r\n\r\n      <form v-if=\"order\">\r\n        <!-- Order Date -->\r\n        <label for=\"orderDate\">Order Date:</label>\r\n        <input type=\"date\" v-model=\"orderForm.orderDate\" required />\r\n\r\n        <!-- Order Status -->\r\n        <label for=\"orderStatus\">Order Status:</label>\r\n        <v-select :options=\"orderStatusOptions\" v-model=\"orderForm.orderStatus\" required></v-select>\r\n\r\n        <!-- Payment Method -->\r\n        <label for=\"paymentMethod\">Payment Method:</label>\r\n        <v-select :options=\"paymentMethodOptions\" v-model=\"orderForm.paymentMethod\" required></v-select>\r\n\r\n        <!-- Shipping/Collected -->\r\n        <label for=\"shipping\">Shipping/Collected:</label>\r\n        <v-select :options=\"shippingOptions\" v-model=\"shippingOrCollectedString\" required></v-select>\r\n\r\n        <!-- Total Amount -->\r\n        <label for=\"totalAmount\">Total Amount:</label>\r\n        <input type=\"number\" v-model=\"orderForm.totalAmount\" required />\r\n\r\n        <button type=\"button\" @click=\"submitUpdate\">Update Order</button>\r\n        <button type=\"button\" @click=\"closeModal\">Cancel</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // other data properties\r\n      selectedOrder: {},\r\n      orderForm: {},\r\n    };\r\n  },\r\n  methods: {\r\n    updateOrder() {\r\n      // Add your logic here to handle the update\r\n      // Likely an API call to update the order via Axios\r\n      axios\r\n          .put(`/api/orders/${this.selectedOrder.orderId}`, this.orderForm)\r\n          .then((response) => {\r\n            console.log(\"Order updated successfully:\", response.data);\r\n            this.closeUpdateModal();\r\n            this.fetchOrders();  // Refetch the updated orders\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error updating order:\", error);\r\n          });\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    fetchOrders() {\r\n      // Fetch orders again to refresh the view\r\n    },\r\n  },\r\n};\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}