{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-95d81cca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Order Management\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Orders\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Order ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Payment Method\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Shipping/Collected\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Amount\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Cart ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Shipping ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddOrderModal = _resolveComponent(\"AddOrderModal\");\n  const _component_UpdateOrderModal = _resolveComponent(\"UpdateOrderModal\");\n  const _component_DeleteOrderModal = _resolveComponent(\"DeleteOrderModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openAddModal && $options.openAddModal(...args))\n  }, \"Add Order\"), _hoisted_3, _createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentMethod), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.shippingOrCollected), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.cart.cartId), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.shipping.shippingID), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openUpdateModal(order)\n    }, \"Update\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.openDeleteModal(order)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Add Order Modal \"), _createVNode(_component_AddOrderModal, {\n    isVisible: $data.isAddModalVisible,\n    onClose: $options.closeAddModal,\n    onAdd: $options.addOrder\n  }, null, 8 /* PROPS */, [\"isVisible\", \"onClose\", \"onAdd\"]), _createCommentVNode(\" Update Order Modal \"), _createVNode(_component_UpdateOrderModal, {\n    isVisible: $data.isUpdateModalVisible,\n    order: $data.selectedOrder,\n    onClose: $options.closeUpdateModal,\n    onUpdateOrder: $options.updateOrder\n  }, null, 8 /* PROPS */, [\"isVisible\", \"order\", \"onClose\", \"onUpdateOrder\"]), _createCommentVNode(\" Delete Order Modal \"), _createVNode(_component_DeleteOrderModal, {\n    isVisible: $data.isDeleteModalVisible,\n    order: $data.selectedOrder,\n    onClose: $options.closeDeleteModal,\n    onDeleteOrder: $options.deleteOrder\n  }, null, 8 /* PROPS */, [\"isVisible\", \"order\", \"onClose\", \"onDeleteOrder\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","openAddModal","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","orders","order","key","id","_toDisplayString","orderID","orderDate","orderStatus","paymentMethod","shippingOrCollected","totalAmount","cart","cartId","shipping","shippingID","$event","openUpdateModal","_hoisted_5","openDeleteModal","_hoisted_6","_createCommentVNode","_createVNode","_component_AddOrderModal","isVisible","isAddModalVisible","onClose","closeAddModal","onAdd","addOrder","_component_UpdateOrderModal","isUpdateModalVisible","selectedOrder","closeUpdateModal","onUpdateOrder","updateOrder","_component_DeleteOrderModal","isDeleteModalVisible","closeDeleteModal","onDeleteOrder","deleteOrder"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Shipping/Collected</th>\r\n          <th>Total Amount</th>\r\n          <th>Cart ID</th>\r\n          <th>Shipping ID</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.id\">\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.shippingOrCollected }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>{{ order.cart.cartId }}</td>\r\n          <td>{{ order.shipping.shippingID }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"openDeleteModal(order)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <AddOrderModal\r\n      :isVisible=\"isAddModalVisible\"\r\n      @close=\"closeAddModal\"\r\n      @add=\"addOrder\"\r\n    />\r\n\r\n    <!-- Update Order Modal -->\r\n    <UpdateOrderModal\r\n      :isVisible=\"isUpdateModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeUpdateModal\"\r\n      @update-order=\"updateOrder\"\r\n    />\r\n\r\n    <!-- Delete Order Modal -->\r\n    <DeleteOrderModal\r\n      :isVisible=\"isDeleteModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeDeleteModal\"\r\n      @delete-order=\"deleteOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddOrderModal from '@/modals/AddOrderModal.vue';\r\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\r\nimport DeleteOrderModal from '@/modals/DeleteOrderModal.vue';\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n\r\n  components: {\r\n    AddOrderModal,\r\n    UpdateOrderModal,\r\n    DeleteOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      isDeleteModalVisible: false,\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      getOrders()\r\n        .then(data => {\r\n          this.orders = data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching orders:', error);\r\n        });\r\n    },\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    openDeleteModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isDeleteModalVisible = true;\r\n    },\r\n    closeDeleteModal() {\r\n      this.isDeleteModalVisible = false;\r\n    },\r\n    addOrder(newOrder) {\r\n      createOrder(newOrder)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeAddModal();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding order:', error);\r\n        });\r\n    },\r\n    updateOrder(updatedOrder) {\r\n      updateOrder(updatedOrder)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeUpdateModal();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating order:', error);\r\n        });\r\n    },\r\n    deleteOrder(orderId) {\r\n      deleteOrder(orderId)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeDeleteModal();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting order:', error);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-management {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}