{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"recent-customers\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h3\", null, \"Recent Customers\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, \"Total Customers: \" + _toDisplayString($data.totalCustomers), 1 /* TEXT */), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"First Name\"), _createElementVNode(\"th\", null, \"Last Name\"), _createElementVNode(\"th\", null, \"Email\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.recentCustomers, customer => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: customer.userId\n    }, [_createElementVNode(\"td\", null, _toDisplayString(customer.firstName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.lastName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(customer.contact.email), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$data","totalCustomers","_Fragment","_renderList","recentCustomers","customer","key","userId","firstName","lastName","contact","email"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\components\\RecentCustomer.vue"],"sourcesContent":["<!-- src/components/RecentCustomer.vue -->\r\n<template>\r\n  <div class=\"recent-customers\">\r\n    <h3>Recent Customers</h3>\r\n    <p>Total Customers: {{ totalCustomers }}</p>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>First Name</th>\r\n          <th>Last Name</th>\r\n          <th>Email</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"customer in recentCustomers\" :key=\"customer.userId\">\r\n          <td>{{ customer.firstName }}</td>\r\n          <td>{{ customer.lastName }}</td>\r\n          <td>{{ customer.contact.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCustomers } from '@/services/customerService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      recentCustomers: [],\r\n      totalCustomers: 0\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchRecentCustomers();\r\n  },\r\n  methods: {\r\n    async fetchRecentCustomers() {\r\n      try {\r\n        const customers = await getCustomers();\r\n        this.totalCustomers = customers.length;\r\n        this.recentCustomers = customers.slice(-3).reverse(); // Get the last 3 added customers\r\n      } catch (error) {\r\n        console.error('Error fetching recent customers:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.recent-customers {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n</style>"],"mappings":";;EAEOA,KAAK,EAAC;AAAkB;;uBAA7BC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAAyB,YAArB,kBAAgB,sBACpBA,mBAAA,CAA4C,WAAzC,mBAAiB,GAAAC,gBAAA,CAAGC,KAAA,CAAAC,cAAc,kBACrCH,mBAAA,CAeQ,gB,0BAdNA,mBAAA,CAMQ,gBALNA,mBAAA,CAIK,aAHHA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAc,YAAV,OAAK,E,wBAGbA,mBAAA,CAMQ,iB,kBALNF,mBAAA,CAIKM,SAAA,QAlBbC,WAAA,CAc+BH,KAAA,CAAAI,eAAe,EAA3BC,QAAQ;yBAAnBT,mBAAA,CAIK;MAJoCU,GAAG,EAAED,QAAQ,CAACE;QACrDT,mBAAA,CAAiC,YAAAC,gBAAA,CAA1BM,QAAQ,CAACG,SAAS,kBACzBV,mBAAA,CAAgC,YAAAC,gBAAA,CAAzBM,QAAQ,CAACI,QAAQ,kBACxBX,mBAAA,CAAqC,YAAAC,gBAAA,CAA9BM,QAAQ,CAACK,OAAO,CAACC,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}