{"ast":null,"code":"import { getCategories, deleteCategory, updateCategory, createCategory } from '@/services/categoryService';\nexport default {\n  data() {\n    return {\n      categories: [],\n      filteredCategories: [],\n      sortKey: '',\n      sortAsc: true,\n      showAddModal: false,\n      showUpdateModal: false,\n      selectedCategory: null,\n      newCategory: {\n        name: '',\n        description: ''\n      },\n      searchQuery: '',\n      filterKey: ''\n    };\n  },\n  async created() {\n    await this.fetchCategories();\n  },\n  methods: {\n    async fetchCategories() {\n      try {\n        this.categories = await getCategories();\n        this.filteredCategories = this.categories;\n      } catch (error) {\n        console.error('Error fetching categories:', error);\n      }\n    },\n    async removeCategory(categoryId) {\n      if (confirm('Are you sure you want to delete this category?')) {\n        try {\n          await deleteCategory(categoryId);\n          await this.fetchCategories();\n        } catch (error) {\n          console.error('Error deleting category:', error);\n        }\n      }\n    },\n    openAddModal() {\n      this.showAddModal = true;\n    },\n    closeAddModal() {\n      this.showAddModal = false;\n      this.newCategory = {\n        name: '',\n        description: ''\n      };\n    },\n    async submitAdd() {\n      try {\n        await createCategory(this.newCategory);\n        await this.fetchCategories();\n        this.closeAddModal();\n      } catch (error) {\n        console.error('Error adding category:', error);\n      }\n    },\n    openUpdateModal(category) {\n      this.selectedCategory = {\n        ...category\n      };\n      this.showUpdateModal = true;\n    },\n    closeUpdateModal() {\n      this.showUpdateModal = false;\n      this.selectedCategory = null;\n    },\n    async submitUpdate() {\n      try {\n        await updateCategory(this.selectedCategory);\n        await this.fetchCategories();\n        this.closeUpdateModal();\n      } catch (error) {\n        console.error('Error updating category:', error);\n      }\n    },\n    searchCategories() {\n      this.filteredCategories = this.categories.filter(category => {\n        return category.name.toLowerCase().includes(this.searchQuery.toLowerCase()) || category.description.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    },\n    filterCategories() {\n      if (this.filterKey) {\n        this.filteredCategories = this.categories.filter(category => {\n          return category[this.filterKey].toLowerCase().includes(this.searchQuery.toLowerCase());\n        });\n      } else {\n        this.filteredCategories = this.categories;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getCategories","deleteCategory","updateCategory","createCategory","data","categories","filteredCategories","sortKey","sortAsc","showAddModal","showUpdateModal","selectedCategory","newCategory","name","description","searchQuery","filterKey","created","fetchCategories","methods","error","console","removeCategory","categoryId","confirm","openAddModal","closeAddModal","submitAdd","openUpdateModal","category","closeUpdateModal","submitUpdate","searchCategories","filter","toLowerCase","includes","filterCategories"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\CategoryManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"management-section\">\r\n    <h3>Manage Categories</h3>\r\n    <button @click=\"openAddModal\">Add Category</button>\r\n\r\n    <!-- Filter and Search Section -->\r\n    <div class=\"filter-search-section\">\r\n      <input v-model=\"searchQuery\" @input=\"searchCategories\" placeholder=\"Search categories...\" />\r\n      <select v-model=\"filterKey\" @change=\"filterCategories\">\r\n        <option value=\"\">All</option>\r\n        <option value=\"name\">Name</option>\r\n        <option value=\"description\">Description</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Amount of Categories -->\r\n    <div class=\"category-count\">\r\n      Amount of Categories: {{ categories.length }}\r\n    </div>\r\n\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('id')\">ID</th>\r\n          <th @click=\"sortBy('name')\">Name</th>\r\n          <th @click=\"sortBy('description')\">Description</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"category in filteredCategories\" :key=\"category.id\">\r\n          <td>{{ category.categoryId }}</td>\r\n          <td>{{ category.name }}</td>\r\n          <td>{{ category.description }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(category)\">Update</button>\r\n            <button @click=\"removeCategory(category.categoryId)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Category Modal -->\r\n    <div v-if=\"showAddModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Add Category</h4>\r\n        <form @submit.prevent=\"submitAdd\">\r\n          <div class=\"input-field\">\r\n            <input v-model=\"newCategory.name\" type=\"text\" required />\r\n            <label class=\"active\">Name</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input v-model=\"newCategory.description\" type=\"text\" required />\r\n            <label class=\"active\">Description</label>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn\">Add</button>\r\n          <button type=\"button\" class=\"btn red\" @click=\"closeAddModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Update Category Modal -->\r\n    <div v-if=\"showUpdateModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Update Category</h4>\r\n<!--        <form @submit.prevent=\"submitUpdate\">-->\r\n<!--          <div class=\"input-field\">-->\r\n<!--            <input v-model=\"selectedCategory.name\" type=\"text\" required />-->\r\n<!--            <label class=\"active\">Name</label>-->\r\n<!--          </div>-->\r\n<!--          <div class=\"input-field\">-->\r\n<!--            <input v-model=\"selectedCategory.description\" type=\"text\" required />-->\r\n<!--            <label class=\"active\">Description</label>-->\r\n<!--          </div>-->\r\n<!--          <button type=\"submit\" class=\"btn\">Update</button>-->\r\n<!--          <button type=\"button\" class=\"btn red\" @click=\"closeUpdateModal\">Cancel</button>-->\r\n<!--        </form>-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCategories, deleteCategory, updateCategory, createCategory } from '@/services/categoryService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      categories: [],\r\n      filteredCategories: [],\r\n      sortKey: '',\r\n      sortAsc: true,\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      selectedCategory: null,\r\n      newCategory: {\r\n        name: '',\r\n        description: ''\r\n      },\r\n      searchQuery: '',\r\n      filterKey: ''\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchCategories();\r\n  },\r\n  methods: {\r\n    async fetchCategories() {\r\n      try {\r\n        this.categories = await getCategories();\r\n        this.filteredCategories = this.categories;\r\n      } catch (error) {\r\n        console.error('Error fetching categories:', error);\r\n      }\r\n    },\r\n    async removeCategory(categoryId) {\r\n      if (confirm('Are you sure you want to delete this category?')) {\r\n        try {\r\n          await deleteCategory(categoryId);\r\n          await this.fetchCategories();\r\n        } catch (error) {\r\n          console.error('Error deleting category:', error);\r\n        }\r\n      }\r\n    },\r\n    openAddModal() {\r\n      this.showAddModal = true;\r\n    },\r\n    closeAddModal() {\r\n      this.showAddModal = false;\r\n      this.newCategory = { name: '', description: '' };\r\n    },\r\n    async submitAdd() {\r\n      try {\r\n        await createCategory(this.newCategory);\r\n        await this.fetchCategories();\r\n        this.closeAddModal();\r\n      } catch (error) {\r\n        console.error('Error adding category:', error);\r\n      }\r\n    },\r\n    openUpdateModal(category) {\r\n      this.selectedCategory = { ...category };\r\n      this.showUpdateModal = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.showUpdateModal = false;\r\n      this.selectedCategory = null;\r\n    },\r\n    async submitUpdate() {\r\n      try {\r\n        await updateCategory(this.selectedCategory);\r\n        await this.fetchCategories();\r\n        this.closeUpdateModal();\r\n      } catch (error) {\r\n        console.error('Error updating category:', error);\r\n      }\r\n    },\r\n    searchCategories() {\r\n      this.filteredCategories = this.categories.filter(category => {\r\n        return category.name.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n               category.description.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n      });\r\n    },\r\n    filterCategories() {\r\n      if (this.filterKey) {\r\n        this.filteredCategories = this.categories.filter(category => {\r\n          return category[this.filterKey].toLowerCase().includes(this.searchQuery.toLowerCase());\r\n        });\r\n      } else {\r\n        this.filteredCategories = this.categories;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.management-section {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.filter-search-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-search-section input,\r\n.filter-search-section select {\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.category-count {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 50%;\r\n}\r\n\r\n.input-field {\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}