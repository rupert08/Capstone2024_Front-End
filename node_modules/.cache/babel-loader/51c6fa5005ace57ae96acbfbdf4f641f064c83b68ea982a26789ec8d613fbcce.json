{"ast":null,"code":"import { getOrders, deleteOrder, createOrder } from '@/services/orderService';\nexport default {\n  data() {\n    return {\n      orders: [],\n      filteredOrders: [],\n      selectedOrder: null,\n      newOrder: {\n        orderID: '',\n        orderDate: '',\n        orderStatus: '',\n        paymentMethod: '',\n        shippedOrCollected: false,\n        totalAmount: '',\n        cart: {\n          email: '',\n          phoneNumber: ''\n        },\n        shipping: {\n          shippingID: '',\n          phoneNumber: '',\n          orderStatus: '',\n          shippingFee: ''\n        }\n      }\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        this.orders = await getOrders();\n        this.filteredOrders = this.orders;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    async deleteOrder(orderID) {\n      if (confirm('Are you sure you want to delete this order?')) {\n        try {\n          await deleteOrder(orderID);\n          await this.fetchOrders();\n        } catch (error) {\n          console.error('Error deleting order:', error);\n        }\n      }\n    },\n    openAddModal() {\n      this.showAddModal = true;\n    },\n    closeAddModal() {\n      this.showAddModal = false;\n      this.newOrder = {\n        orderID: '',\n        orderDate: '',\n        orderStatus: '',\n        paymentMethod: '',\n        shippedOrCollected: false,\n        totalAmount: '',\n        cartID: '',\n        shippingID: ''\n      };\n    },\n    async submitAdd() {\n      try {\n        await createOrder(this.newOrder);\n        await this.fetchOrders();\n        this.closeAddModal();\n      } catch (error) {\n        console.error('Error adding order:', error);\n      }\n    },\n    openUpdateModal(order) {\n      this.selectedOrder = {\n        ...order\n      };\n      this.showUpdateModal = true;\n    },\n    closeUpdateModal() {\n      this.showUpdateModal = false;\n      this.selectedOrder = null;\n    },\n    // async submitUpdate() {\n    //   try {\n    //     await updateOrder(this.selectedOrder);\n    //     await this.fetchOrders();\n    //     this.closeUpdateModal();\n    //   } catch (error) {\n    //     console.error('Error updating order:', error);\n    //   }\n    // },\n    searchOrders() {\n      this.filteredOrders = this.orders.filter(order => {\n        return order.orderID.toString().includes(this.searchQuery) || order.orderStatus.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    },\n    filterOrders() {\n      if (this.filterKey) {\n        this.filteredOrders = this.orders.filter(order => {\n          return order[this.filterKey].toString().toLowerCase().includes(this.searchQuery.toLowerCase());\n        });\n      } else {\n        this.filteredOrders = this.orders;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getOrders","deleteOrder","createOrder","data","orders","filteredOrders","selectedOrder","newOrder","orderID","orderDate","orderStatus","paymentMethod","shippedOrCollected","totalAmount","cart","email","phoneNumber","shipping","shippingID","shippingFee","created","fetchOrders","methods","error","console","confirm","openAddModal","showAddModal","closeAddModal","cartID","submitAdd","openUpdateModal","order","showUpdateModal","closeUpdateModal","searchOrders","filter","toString","includes","searchQuery","toLowerCase","filterOrders","filterKey"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<!--src/views/adminviews/OrderManagement.vue-->\r\n\r\n<template>\r\n  <div class=\"management-section\">\r\n    <h3>Manage Orders</h3>\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Order ID</th>\r\n<!--        <th>Customer Name</th>-->\r\n<!--        <th>Shipping Address</th>-->\r\n        <th>Order Date</th>\r\n        <th>Status</th>\r\n        <th>Payment Method</th>\r\n        <th>Shipped/Collected</th>\r\n        <th>Total Amount</th>\r\n        <th>CartID</th>\r\n        <th>ShippingID</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in filteredOrders\" :key=\"order.orderID\">\r\n        <td>{{ order.orderID }}</td>\r\n<!--        <td>{{ order.cart.customerName }}</td>-->\r\n<!--        <td>{{ order.shipping.address }}</td>-->\r\n        <td>{{ order.orderDate }}</td>\r\n        <td>{{ order.orderStatus }}</td>\r\n        <td>{{ order.paymentMethod }}</td>\r\n        <td>{{ order.shippedOrCollected ? 'Yes' : 'No' }}</td>\r\n        <td>{{ order.totalAmount }}</td>\r\n                <td>{{ order.cart.cartID }}</td>\r\n        <td>{{ order.shipping.shippingID }}</td>\r\n        <td><button @click=\"deleteOrder(order.orderID)\">Delete</button></td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, deleteOrder, createOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      filteredOrders: [],\r\n      selectedOrder: null,\r\n      newOrder: {\r\n        orderID: '',\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippedOrCollected: false,\r\n        totalAmount: '',\r\n        cart: {\r\n          email: '',\r\n          phoneNumber: ''\r\n        },\r\n        shipping: {\r\n          shippingID: '',\r\n          phoneNumber: '',\r\n          orderStatus: '',\r\n          shippingFee:''\r\n        }\r\n      },\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchOrders();\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n        this.filteredOrders = this.orders;\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    },\r\n    async deleteOrder(orderID) {\r\n      if (confirm('Are you sure you want to delete this order?')) {\r\n        try {\r\n          await deleteOrder(orderID);\r\n          await this.fetchOrders();\r\n        } catch (error) {\r\n          console.error('Error deleting order:', error);\r\n        }\r\n      }\r\n    },\r\n    openAddModal() {\r\n      this.showAddModal = true;\r\n    },\r\n    closeAddModal() {\r\n      this.showAddModal = false;\r\n      this.newOrder = {\r\n        orderID: '',\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippedOrCollected: false,\r\n        totalAmount: '',\r\n        cartID: '',\r\n        shippingID: ''\r\n      };\r\n    },\r\n    async submitAdd() {\r\n      try {\r\n        await createOrder(this.newOrder);\r\n        await this.fetchOrders();\r\n        this.closeAddModal();\r\n      } catch (error) {\r\n        console.error('Error adding order:', error);\r\n      }\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = { ...order };\r\n      this.showUpdateModal = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.showUpdateModal = false;\r\n      this.selectedOrder = null;\r\n    },\r\n    // async submitUpdate() {\r\n    //   try {\r\n    //     await updateOrder(this.selectedOrder);\r\n    //     await this.fetchOrders();\r\n    //     this.closeUpdateModal();\r\n    //   } catch (error) {\r\n    //     console.error('Error updating order:', error);\r\n    //   }\r\n    // },\r\n    searchOrders() {\r\n      this.filteredOrders = this.orders.filter(order => {\r\n        return order.orderID.toString().includes(this.searchQuery) ||\r\n               order.orderStatus.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n      });\r\n    },\r\n    filterOrders() {\r\n      if (this.filterKey) {\r\n        this.filteredOrders = this.orders.filter(order => {\r\n          return order[this.filterKey].toString().toLowerCase().includes(this.searchQuery.toLowerCase());\r\n        });\r\n      } else {\r\n        this.filteredOrders = this.orders;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.management-section {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}