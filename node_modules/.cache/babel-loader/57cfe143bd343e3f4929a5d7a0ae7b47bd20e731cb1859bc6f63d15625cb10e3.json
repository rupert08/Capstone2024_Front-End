{"ast":null,"code":"import { getOrders, deleteOrder, updateOrder, createOrder } from '@/services/orderService';\nexport default {\n  data() {\n    return {\n      orders: [],\n      filteredOrders: [],\n      sortKey: '',\n      sortAsc: true,\n      showAddModal: false,\n      showUpdateModal: false,\n      selectedOrder: null,\n      newOrder: {\n        orderDate: '',\n        totalAmount: '',\n        orderStatus: 'PENDING'\n      },\n      searchQuery: '',\n      filterKey: ''\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        this.orders = await getOrders();\n        this.filteredOrders = this.orders;\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    async removeOrder(orderID) {\n      if (confirm('Are you sure you want to delete this order?')) {\n        try {\n          await deleteOrder(orderID);\n          await this.fetchOrders();\n        } catch (error) {\n          console.error('Error deleting order:', error);\n        }\n      }\n    },\n    openAddModal() {\n      this.showAddModal = true;\n    },\n    closeAddModal() {\n      this.showAddModal = false;\n      this.newOrder = {\n        orderDate: '',\n        totalAmount: '',\n        orderStatus: 'PENDING'\n      };\n    },\n    async submitAdd() {\n      try {\n        await createOrder(this.newOrder);\n        await this.fetchOrders();\n        this.closeAddModal();\n      } catch (error) {\n        console.error('Error adding order:', error);\n      }\n    },\n    openUpdateModal(order) {\n      this.selectedOrder = {\n        ...order\n      };\n      this.showUpdateModal = true;\n    },\n    closeUpdateModal() {\n      this.showUpdateModal = false;\n      this.selectedOrder = null;\n    },\n    async submitUpdate() {\n      try {\n        await updateOrder(this.selectedOrder);\n        await this.fetchOrders();\n        this.closeUpdateModal();\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    },\n    searchOrders() {\n      this.filteredOrders = this.orders.filter(order => {\n        return order.orderDate.toLowerCase().includes(this.searchQuery.toLowerCase()) || order.totalAmount.toLowerCase().includes(this.searchQuery.toLowerCase()) || order.orderStatus.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    },\n    filterOrders() {\n      if (this.filterKey) {\n        this.filteredOrders = this.orders.filter(order => {\n          return order[this.filterKey].toLowerCase().includes(this.searchQuery.toLowerCase());\n        });\n      } else {\n        this.filteredOrders = this.orders;\n      }\n    }\n  }\n};","map":{"version":3,"names":["getOrders","deleteOrder","updateOrder","createOrder","data","orders","filteredOrders","sortKey","sortAsc","showAddModal","showUpdateModal","selectedOrder","newOrder","orderDate","totalAmount","orderStatus","searchQuery","filterKey","created","fetchOrders","methods","error","console","removeOrder","orderID","confirm","openAddModal","closeAddModal","submitAdd","openUpdateModal","order","closeUpdateModal","submitUpdate","searchOrders","filter","toLowerCase","includes","filterOrders"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"management-section\">\r\n    <h3>Manage Orders</h3>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <!-- Filter and Search Section -->\r\n    <div class=\"filter-search-section\">\r\n      <input v-model=\"searchQuery\" @input=\"searchOrders\" placeholder=\"Search orders...\" />\r\n      <select v-model=\"filterKey\" @change=\"filterOrders\">\r\n        <option value=\"\">All</option>\r\n        <option value=\"orderDate\">Order Date</option>\r\n        <option value=\"totalAmount\">Total Amount</option>\r\n        <option value=\"orderStatus\">Order Status</option>\r\n      </select>\r\n    </div>\r\n\r\n    <!-- Amount of Orders -->\r\n    <div class=\"order-count\">\r\n      Amount of Orders: {{ orders.length }}\r\n    </div>\r\n\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th @click=\"sortBy('orderID')\">ID</th>\r\n        <th @click=\"sortBy('orderDate')\">Order Date</th>\r\n        <th @click=\"sortBy('totalAmount')\">Total Amount</th>\r\n        <th @click=\"sortBy('orderStatus')\">Order Status</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in filteredOrders\" :key=\"order.orderID\">\r\n        <td>{{ order.orderID }}</td>\r\n        <td>{{ order.orderDate }}</td>\r\n        <td>{{ order.totalAmount }}</td>\r\n        <td>{{ order.orderStatus }}</td>\r\n        <td>\r\n          <button @click=\"openUpdateModal(order)\">Update</button>\r\n          <button @click=\"removeOrder(order.orderID)\">Delete</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"showAddModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Add Order</h4>\r\n        <form @submit.prevent=\"submitAdd\">\r\n          <div class=\"input-field\">\r\n            <input v-model=\"newOrder.orderDate\" type=\"date\" required />\r\n            <label class=\"active\">Order Date</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input v-model=\"newOrder.totalAmount\" type=\"number\" required />\r\n            <label class=\"active\">Total Amount</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <select v-model=\"newOrder.orderStatus\" required>\r\n              <option value=\"PENDING\">Pending</option>\r\n              <option value=\"SHIPPED\">Shipped</option>\r\n              <option value=\"DELIVERED\">Delivered</option>\r\n              <option value=\"CANCELLED\">Cancelled</option>\r\n            </select>\r\n            <label class=\"active\">Order Status</label>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn\">Add</button>\r\n          <button type=\"button\" class=\"btn red\" @click=\"closeAddModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Update Order Modal -->\r\n    <div v-if=\"showUpdateModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Update Order</h4>\r\n        <form @submit.prevent=\"submitUpdate\">\r\n          <div class=\"input-field\">\r\n            <input v-model=\"selectedOrder.orderDate\" type=\"date\" required />\r\n            <label class=\"active\">Order Date</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <input v-model=\"selectedOrder.totalAmount\" type=\"number\" required />\r\n            <label class=\"active\">Total Amount</label>\r\n          </div>\r\n          <div class=\"input-field\">\r\n            <select v-model=\"selectedOrder.orderStatus\" required>\r\n              <option value=\"PENDING\">Pending</option>\r\n              <option value=\"SHIPPED\">Shipped</option>\r\n              <option value=\"DELIVERED\">Delivered</option>\r\n              <option value=\"CANCELLED\">Cancelled</option>\r\n            </select>\r\n            <label class=\"active\">Order Status</label>\r\n          </div>\r\n          <button type=\"submit\" class=\"btn\">Update</button>\r\n          <button type=\"button\" class=\"btn red\" @click=\"closeUpdateModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, deleteOrder, updateOrder, createOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      filteredOrders: [],\r\n      sortKey: '',\r\n      sortAsc: true,\r\n      showAddModal: false,\r\n      showUpdateModal: false,\r\n      selectedOrder: null,\r\n      newOrder: {\r\n        orderDate: '',\r\n        totalAmount: '',\r\n        orderStatus: 'PENDING'\r\n      },\r\n      searchQuery: '',\r\n      filterKey: ''\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchOrders();\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n        this.filteredOrders = this.orders;\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    },\r\n    async removeOrder(orderID) {\r\n      if (confirm('Are you sure you want to delete this order?')) {\r\n        try {\r\n          await deleteOrder(orderID);\r\n          await this.fetchOrders();\r\n        } catch (error) {\r\n          console.error('Error deleting order:', error);\r\n        }\r\n      }\r\n    },\r\n    openAddModal() {\r\n      this.showAddModal = true;\r\n    },\r\n    closeAddModal() {\r\n      this.showAddModal = false;\r\n      this.newOrder = { orderDate: '', totalAmount: '', orderStatus: 'PENDING' };\r\n    },\r\n    async submitAdd() {\r\n      try {\r\n        await createOrder(this.newOrder);\r\n        await this.fetchOrders();\r\n        this.closeAddModal();\r\n      } catch (error) {\r\n        console.error('Error adding order:', error);\r\n      }\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = { ...order };\r\n      this.showUpdateModal = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.showUpdateModal = false;\r\n      this.selectedOrder = null;\r\n    },\r\n    async submitUpdate() {\r\n      try {\r\n        await updateOrder(this.selectedOrder);\r\n        await this.fetchOrders();\r\n        this.closeUpdateModal();\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    },\r\n    searchOrders() {\r\n      this.filteredOrders = this.orders.filter(order => {\r\n        return order.orderDate.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            order.totalAmount.toLowerCase().includes(this.searchQuery.toLowerCase()) ||\r\n            order.orderStatus.toLowerCase().includes(this.searchQuery.toLowerCase());\r\n      });\r\n    },\r\n    filterOrders() {\r\n      if (this.filterKey) {\r\n        this.filteredOrders = this.orders.filter(order => {\r\n          return order[this.filterKey].toLowerCase().includes(this.searchQuery.toLowerCase());\r\n        });\r\n      } else {\r\n        this.filteredOrders = this.orders;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.management-section {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.filter-search-section {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.filter-search-section input,\r\n.filter-search-section select {\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n}\r\n\r\n.order-count {\r\n  margin-bottom: 10px;\r\n  font-weight: bold;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 50%;\r\n}\r\n\r\n.input-field {\r\n  margin-bottom: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}