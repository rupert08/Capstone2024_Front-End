{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-95d81cca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Order Management\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Amount\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Payment Method\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Shipped/Collected\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_7 = {\n  class: \"modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.showCreateOrderModal && $options.showCreateOrderModal(...args))\n  }, \"Create Order\"), _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.orderID\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentMethod), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.shippedOrCollected ? 'Yes' : 'No'), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showEditOrderModal(order)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteOrder(order.orderID)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Create/Edit Order Modal \"), $data.showModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h2\", null, _toDisplayString($data.isEditMode ? 'Edit Order' : 'Create Order'), 1 /* TEXT */), _createCommentVNode(\"        <form @submit.prevent=\\\"isEditMode ? updateOrder() : createOrder()\\\">\"), _createCommentVNode(\"          <label for=\\\"orderDate\\\">Order Date:</label>\"), _createCommentVNode(\"          <input type=\\\"date\\\" v-model=\\\"orderForm.orderDate\\\" required />\"), _createCommentVNode(\"          <label for=\\\"totalAmount\\\">Total Amount:</label>\"), _createCommentVNode(\"          <input type=\\\"number\\\" v-model=\\\"orderForm.totalAmount\\\" required />\"), _createCommentVNode(\"          <label for=\\\"orderStatus\\\">Status:</label>\"), _createCommentVNode(\"          <select v-model=\\\"orderForm.orderStatus\\\" required>\"), _createCommentVNode(\"            <option value=\\\"PENDING\\\">Pending</option>\"), _createCommentVNode(\"            <option value=\\\"SHIPPED\\\">Shipped</option>\"), _createCommentVNode(\"            <option value=\\\"DELIVERED\\\">Delivered</option>\"), _createCommentVNode(\"          </select>\"), _createCommentVNode(\"          <label for=\\\"paymentMethod\\\">Payment Method:</label>\"), _createCommentVNode(\"          <select v-model=\\\"orderForm.paymentMethod\\\" required>\"), _createCommentVNode(\"            <option value=\\\"CREDIT_CARD\\\">Credit Card</option>\"), _createCommentVNode(\"            <option value=\\\"DEBIT_CARD\\\">Debit Card</option>\"), _createCommentVNode(\"            <option value=\\\"PAYPAL\\\">PayPal</option>\"), _createCommentVNode(\"            <option value=\\\"CASH_ON_DELIVERY\\\">Cash on Delivery</option>\"), _createCommentVNode(\"          </select>\"), _createCommentVNode(\"          <label for=\\\"shippedOrCollected\\\">Shipped/Collected:</label>\"), _createCommentVNode(\"          <input type=\\\"checkbox\\\" v-model=\\\"orderForm.shippedOrCollected\\\" />\"), _createCommentVNode(\"          <button type=\\\"submit\\\">{{ isEditMode ? 'Update' : 'Create' }}</button>\"), _createCommentVNode(\"          <button type=\\\"button\\\" @click=\\\"closeModal\\\">Cancel</button>\"), _createCommentVNode(\"        </form>\")])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","showCreateOrderModal","_hoisted_3","_Fragment","_renderList","$data","orders","order","orderID","_toDisplayString","orderDate","totalAmount","orderStatus","paymentMethod","shippedOrCollected","$event","showEditOrderModal","_hoisted_4","deleteOrder","_hoisted_5","_createCommentVNode","showModal","_hoisted_6","_hoisted_7","isEditMode"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"showCreateOrderModal\">Create Order</button>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Order Date</th>\r\n          <th>Total Amount</th>\r\n          <th>Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Shipped/Collected</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.shippedOrCollected ? 'Yes' : 'No' }}</td>\r\n          <td>\r\n            <button @click=\"showEditOrderModal(order)\">Edit</button>\r\n            <button @click=\"deleteOrder(order.orderID)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Create/Edit Order Modal -->\r\n    <div v-if=\"showModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h2>{{ isEditMode ? 'Edit Order' : 'Create Order' }}</h2>\r\n<!--        <form @submit.prevent=\"isEditMode ? updateOrder() : createOrder()\">-->\r\n<!--          <label for=\"orderDate\">Order Date:</label>-->\r\n<!--          <input type=\"date\" v-model=\"orderForm.orderDate\" required />-->\r\n\r\n<!--          <label for=\"totalAmount\">Total Amount:</label>-->\r\n<!--          <input type=\"number\" v-model=\"orderForm.totalAmount\" required />-->\r\n\r\n<!--          <label for=\"orderStatus\">Status:</label>-->\r\n<!--          <select v-model=\"orderForm.orderStatus\" required>-->\r\n<!--            <option value=\"PENDING\">Pending</option>-->\r\n<!--            <option value=\"SHIPPED\">Shipped</option>-->\r\n<!--            <option value=\"DELIVERED\">Delivered</option>-->\r\n<!--          </select>-->\r\n\r\n<!--          <label for=\"paymentMethod\">Payment Method:</label>-->\r\n<!--          <select v-model=\"orderForm.paymentMethod\" required>-->\r\n<!--            <option value=\"CREDIT_CARD\">Credit Card</option>-->\r\n<!--            <option value=\"DEBIT_CARD\">Debit Card</option>-->\r\n<!--            <option value=\"PAYPAL\">PayPal</option>-->\r\n<!--            <option value=\"CASH_ON_DELIVERY\">Cash on Delivery</option>-->\r\n<!--          </select>-->\r\n\r\n<!--          <label for=\"shippedOrCollected\">Shipped/Collected:</label>-->\r\n<!--          <input type=\"checkbox\" v-model=\"orderForm.shippedOrCollected\" />-->\r\n\r\n<!--          <button type=\"submit\">{{ isEditMode ? 'Update' : 'Create' }}</button>-->\r\n<!--          <button type=\"button\" @click=\"closeModal\">Cancel</button>-->\r\n<!--        </form>-->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      showModal: false,\r\n      isEditMode: false,\r\n      orderForm: {\r\n        id: '',\r\n        orderDate: '',\r\n        totalAmount: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippedOrCollected: false,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      getOrders()\r\n          .then(data => {\r\n            this.orders = data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching orders:', error);\r\n          });\r\n    },\r\n    showCreateOrderModal() {\r\n      this.isEditMode = false;\r\n      this.orderForm = {\r\n        id: '',\r\n        orderDate: '',\r\n        totalAmount: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippedOrCollected: false,\r\n      };\r\n      this.showModal = true;\r\n    },\r\n    showEditOrderModal(order) {\r\n      this.isEditMode = true;\r\n      this.orderForm = { ...order };\r\n      this.showModal = true;\r\n    },\r\n    createOrder() {\r\n      createOrder(this.orderForm)\r\n          .then(() => {\r\n            this.fetchOrders();\r\n            this.closeModal();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error creating order:', error);\r\n          });\r\n    },\r\n    updateOrder() {\r\n      updateOrder(this.orderForm)\r\n          .then(() => {\r\n            this.fetchOrders();\r\n            this.closeModal();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error updating order:', error);\r\n          });\r\n    },\r\n    deleteOrder(orderID) {\r\n      deleteOrder(orderID)\r\n          .then(() => {\r\n            this.fetchOrders();\r\n          })\r\n          .catch(error => {\r\n            console.error('Error deleting order:', error);\r\n          });\r\n    },\r\n    closeModal() {\r\n      this.showModal = false;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-management {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 50%;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAyB,YAArB,kBAAgB;gEAGlBA,mBAAA,CAUQ,gB,aATNA,mBAAA,CAQK,a,aAPHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAe,YAAX,QAAM,G,aACVA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAA0B,YAAtB,mBAAiB,G,aACrBA,mBAAA,CAAgB,YAAZ,SAAO,E;mBAbrB;mBAAA;;EAAAC,GAAA;EAiC0BF,KAAK,EAAC;;;EACrBA,KAAK,EAAC;AAAe;;uBAjC9BG,mBAAA,CAiEM,OAjENC,UAiEM,GAhEJC,UAAyB,EACzBJ,mBAAA,CAA2D;IAAlDK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,oBAAA,IAAAD,QAAA,CAAAC,oBAAA,IAAAF,IAAA,CAAoB;KAAE,cAAY,GAClDP,mBAAA,CA0BQ,gBAzBNU,UAUQ,EACRV,mBAAA,CAaQ,iB,kBAZNE,mBAAA,CAWKS,SAAA,QA5BbC,WAAA,CAiB4BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBb,mBAAA,CAWK;MAXwBD,GAAG,EAAEc,KAAK,CAACC;QACtChB,mBAAA,CAA4B,YAAAiB,gBAAA,CAArBF,KAAK,CAACC,OAAO,kBACpBhB,mBAAA,CAA8B,YAAAiB,gBAAA,CAAvBF,KAAK,CAACG,SAAS,kBACtBlB,mBAAA,CAAgC,YAAAiB,gBAAA,CAAzBF,KAAK,CAACI,WAAW,kBACxBnB,mBAAA,CAAgC,YAAAiB,gBAAA,CAAzBF,KAAK,CAACK,WAAW,kBACxBpB,mBAAA,CAAkC,YAAAiB,gBAAA,CAA3BF,KAAK,CAACM,aAAa,kBAC1BrB,mBAAA,CAAsD,YAAAiB,gBAAA,CAA/CF,KAAK,CAACO,kBAAkB,iCAC/BtB,mBAAA,CAGK,aAFHA,mBAAA,CAAwD;MAA/CK,OAAK,EAAAkB,MAAA,IAAEf,QAAA,CAAAgB,kBAAkB,CAACT,KAAK;OAAG,MAAI,iBAzB3DU,UAAA,GA0BYzB,mBAAA,CAA2D;MAAlDK,OAAK,EAAAkB,MAAA,IAAEf,QAAA,CAAAkB,WAAW,CAACX,KAAK,CAACC,OAAO;OAAG,QAAM,iBA1B9DW,UAAA,E;sCAgCIC,mBAAA,6BAAgC,EACrBf,KAAA,CAAAgB,SAAS,I,cAApB3B,mBAAA,CAgCM,OAhCN4B,UAgCM,GA/BJ9B,mBAAA,CA8BM,OA9BN+B,UA8BM,GA7BJ/B,mBAAA,CAAyD,YAAAiB,gBAAA,CAAlDJ,KAAA,CAAAmB,UAAU,kDACzBJ,mBAAA,iFAAkF,EAClFA,mBAAA,0DAA2D,EAC3DA,mBAAA,8EAA6E,EAE7EA,mBAAA,8DAA+D,EAC/DA,mBAAA,kFAAiF,EAEjFA,mBAAA,wDAAyD,EACzDA,mBAAA,iEAAkE,EAClEA,mBAAA,0DAA2D,EAC3DA,mBAAA,0DAA2D,EAC3DA,mBAAA,8DAA+D,EAC/DA,mBAAA,uBAA0B,EAE1BA,mBAAA,kEAAmE,EACnEA,mBAAA,mEAAoE,EACpEA,mBAAA,kEAAmE,EACnEA,mBAAA,gEAAiE,EACjEA,mBAAA,wDAAyD,EACzDA,mBAAA,4EAA6E,EAC7EA,mBAAA,uBAA0B,EAE1BA,mBAAA,0EAA2E,EAC3EA,mBAAA,kFAAiF,EAEjFA,mBAAA,qFAAsF,EACtFA,mBAAA,2EAA0E,EAC1EA,mBAAA,mBAAsB,C,OA/DtBA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}