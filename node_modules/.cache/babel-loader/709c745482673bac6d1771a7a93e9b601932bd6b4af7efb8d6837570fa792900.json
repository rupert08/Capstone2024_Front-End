{"ast":null,"code":"import { getProducts, deleteProduct } from '@/services/productService';\nexport default {\n  data() {\n    return {\n      products: [],\n      sortKey: '',\n      sortAsc: true\n    };\n  },\n  async created() {\n    await this.fetchProducts();\n  },\n  methods: {\n    async fetchProducts() {\n      try {\n        this.products = await getProducts();\n      } catch (error) {\n        console.error('Error fetching products:', error);\n      }\n    },\n    sortBy(key) {\n      this.sortKey = key;\n      this.sortAsc = !this.sortAsc;\n      this.products.sort((a, b) => {\n        let modifier = 1;\n        if (!this.sortAsc) modifier = -1;\n        if (a[key] < b[key]) return -1 * modifier;\n        if (a[key] > b[key]) return 1 * modifier;\n        return 0;\n      });\n    },\n    addProduct() {\n      // Implement add product logic here\n    },\n    updateProduct(productId) {\n      alert(`Update product functionality for product ID ${productId} will be implemented later.`);\n    },\n    async deleteProduct(productId) {\n      if (confirm('Are you sure you want to delete this product?')) {\n        try {\n          await deleteProduct(productId);\n          this.fetchProducts(); // Refresh the product list after deletion\n        } catch (error) {\n          console.error('Error deleting product:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["getProducts","deleteProduct","data","products","sortKey","sortAsc","created","fetchProducts","methods","error","console","sortBy","key","sort","a","b","modifier","addProduct","updateProduct","productId","alert","confirm"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\ProductManagement.vue"],"sourcesContent":["<!-- src/views/adminviews/ProductManagement.vue -->\r\n<template>\r\n  <div class=\"management-section\">\r\n    <h3>Manage Products</h3>\r\n    <button @click=\"addProduct\">Add Product</button>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('id')\">ID</th>\r\n          <th @click=\"sortBy('name')\">Name</th>\r\n          <th @click=\"sortBy('category')\">Category</th>\r\n          <th @click=\"sortBy('price')\">Price</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"product in products\" :key=\"product.productId\">\r\n          <td>{{ product.productId }}</td>\r\n          <td>{{ product.name }}</td>\r\n          <td>{{ product.category.name }}</td>\r\n          <td>{{ 'R' + product.price }}</td>\r\n          <td>\r\n            <button @click=\"updateProduct(product.productId)\">Update</button>\r\n            <button @click=\"deleteProduct(product.productId)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getProducts, deleteProduct } from '@/services/productService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      products: [],\r\n      sortKey: '',\r\n      sortAsc: true\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchProducts();\r\n  },\r\n  methods: {\r\n    async fetchProducts() {\r\n      try {\r\n        this.products = await getProducts();\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      }\r\n    },\r\n    sortBy(key) {\r\n      this.sortKey = key;\r\n      this.sortAsc = !this.sortAsc;\r\n      this.products.sort((a, b) => {\r\n        let modifier = 1;\r\n        if (!this.sortAsc) modifier = -1;\r\n        if (a[key] < b[key]) return -1 * modifier;\r\n        if (a[key] > b[key]) return 1 * modifier;\r\n        return 0;\r\n      });\r\n    },\r\n    addProduct() {\r\n      // Implement add product logic here\r\n    },\r\n    updateProduct(productId) {\r\n      alert(`Update product functionality for product ID ${productId} will be implemented later.`);\r\n    },\r\n    async deleteProduct(productId) {\r\n      if (confirm('Are you sure you want to delete this product?')) {\r\n        try {\r\n          await deleteProduct(productId);\r\n          this.fetchProducts(); // Refresh the product list after deletion\r\n        } catch (error) {\r\n          console.error('Error deleting product:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.management-section {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>"],"mappings":"AAgCA,SAASA,WAAW,EAAEC,aAAY,QAAS,2BAA2B;AAEtE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAM,IAAI,CAACC,aAAa,CAAC,CAAC;EAC5B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,IAAI,CAACJ,QAAO,GAAI,MAAMH,WAAW,CAAC,CAAC;MACrC,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDE,MAAMA,CAACC,GAAG,EAAE;MACV,IAAI,CAACR,OAAM,GAAIQ,GAAG;MAClB,IAAI,CAACP,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;MAC5B,IAAI,CAACF,QAAQ,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC3B,IAAIC,QAAO,GAAI,CAAC;QAChB,IAAI,CAAC,IAAI,CAACX,OAAO,EAAEW,QAAO,GAAI,CAAC,CAAC;QAChC,IAAIF,CAAC,CAACF,GAAG,IAAIG,CAAC,CAACH,GAAG,CAAC,EAAE,OAAO,CAAC,IAAII,QAAQ;QACzC,IAAIF,CAAC,CAACF,GAAG,IAAIG,CAAC,CAACH,GAAG,CAAC,EAAE,OAAO,IAAII,QAAQ;QACxC,OAAO,CAAC;MACV,CAAC,CAAC;IACJ,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,aAAaA,CAACC,SAAS,EAAE;MACvBC,KAAK,CAAC,+CAA+CD,SAAS,6BAA6B,CAAC;IAC9F,CAAC;IACD,MAAMlB,aAAaA,CAACkB,SAAS,EAAE;MAC7B,IAAIE,OAAO,CAAC,+CAA+C,CAAC,EAAE;QAC5D,IAAI;UACF,MAAMpB,aAAa,CAACkB,SAAS,CAAC;UAC9B,IAAI,CAACZ,aAAa,CAAC,CAAC,EAAE;QACxB,EAAE,OAAOE,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QACjD;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}