{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-95d81cca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Order Management\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Order ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Payment Method\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Amount\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Add Order\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Update Order\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" Orders Table \"), _createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.orderID\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentMethod), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openUpdateModal(order)\n    }, \"Update\", 8 /* PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteOrder(order.orderID)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_4)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Add Order Modal \"), $data.isAddModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.orderForm.orderDate = $event),\n    placeholder: \"Order Date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.orderDate]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.orderForm.orderStatus = $event),\n    placeholder: \"Order Status\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.orderStatus]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.orderForm.paymentMethod = $event),\n    placeholder: \"Payment Method\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.paymentMethod]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.orderForm.totalAmount = $event),\n    placeholder: \"Total Amount\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.orderForm.totalAmount]]), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.submitOrder && $options.submitOrder(...args))\n  }, \"Submit\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.closeAddModal && $options.closeAddModal(...args))\n  }, \"Cancel\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Update Order Modal \"), $data.isUpdateModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.selectedOrder.orderDate = $event),\n    placeholder: \"Order Date\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedOrder.orderDate]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.selectedOrder.orderStatus = $event),\n    placeholder: \"Order Status\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedOrder.orderStatus]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = $event => $data.selectedOrder.paymentMethod = $event),\n    placeholder: \"Payment Method\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedOrder.paymentMethod]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.selectedOrder.totalAmount = $event),\n    placeholder: \"Total Amount\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.selectedOrder.totalAmount]]), _createElementVNode(\"button\", {\n    onClick: _cache[10] || (_cache[10] = (...args) => $options.updateOrder && $options.updateOrder(...args))\n  }, \"Submit\"), _createElementVNode(\"button\", {\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.closeUpdateModal && $options.closeUpdateModal(...args))\n  }, \"Cancel\")])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Add Order Button \"), _createElementVNode(\"button\", {\n    onClick: _cache[12] || (_cache[12] = (...args) => $options.openAddModal && $options.openAddModal(...args))\n  }, \"Add New Order\")]);\n}","map":{"version":3,"names":["_createElementVNode","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_Fragment","_renderList","$data","orders","order","orderID","_toDisplayString","orderDate","orderStatus","paymentMethod","totalAmount","onClick","$event","$options","openUpdateModal","_hoisted_3","deleteOrder","_hoisted_4","isAddModalVisible","_hoisted_5","_hoisted_6","_cache","orderForm","placeholder","args","submitOrder","closeAddModal","isUpdateModalVisible","_hoisted_7","_hoisted_8","selectedOrder","updateOrder","closeUpdateModal","openAddModal"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Order Management</h1>\r\n\r\n    <!-- Orders Table -->\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Order ID</th>\r\n        <th>Order Date</th>\r\n        <th>Status</th>\r\n        <th>Payment Method</th>\r\n        <th>Total Amount</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n        <td>{{ order.orderID }}</td>\r\n        <td>{{ order.orderDate }}</td>\r\n        <td>{{ order.orderStatus }}</td>\r\n        <td>{{ order.paymentMethod }}</td>\r\n        <td>{{ order.totalAmount }}</td>\r\n        <td>\r\n          <button @click=\"openUpdateModal(order)\">Update</button>\r\n          <button @click=\"deleteOrder(order.orderID)\">Delete</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"isAddModalVisible\">\r\n      <h2>Add Order</h2>\r\n      <input v-model=\"orderForm.orderDate\" placeholder=\"Order Date\">\r\n      <input v-model=\"orderForm.orderStatus\" placeholder=\"Order Status\">\r\n      <input v-model=\"orderForm.paymentMethod\" placeholder=\"Payment Method\">\r\n      <input v-model=\"orderForm.totalAmount\" placeholder=\"Total Amount\">\r\n      <button @click=\"submitOrder\">Submit</button>\r\n      <button @click=\"closeAddModal\">Cancel</button>\r\n    </div>\r\n\r\n    <!-- Update Order Modal -->\r\n    <div v-if=\"isUpdateModalVisible\">\r\n      <h2>Update Order</h2>\r\n      <input v-model=\"selectedOrder.orderDate\" placeholder=\"Order Date\">\r\n      <input v-model=\"selectedOrder.orderStatus\" placeholder=\"Order Status\">\r\n      <input v-model=\"selectedOrder.paymentMethod\" placeholder=\"Payment Method\">\r\n      <input v-model=\"selectedOrder.totalAmount\" placeholder=\"Total Amount\">\r\n      <button @click=\"updateOrder\">Submit</button>\r\n      <button @click=\"closeUpdateModal\">Cancel</button>\r\n    </div>\r\n\r\n    <!-- Add Order Button -->\r\n    <button @click=\"openAddModal\">Add New Order</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { createOrder, updateOrder, deleteOrder, fetchOrders } from '@/services/orderService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      orderForm: {\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        totalAmount: ''\r\n      },\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  methods: {\r\n    // Fetch all orders\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await fetchOrders();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n        alert('Failed to fetch orders.');\r\n      }\r\n    },\r\n\r\n    // Add a new order\r\n    async submitOrder() {\r\n      if (this.isValidForm()) {\r\n        try {\r\n          await createOrder(this.orderForm);\r\n          this.fetchOrders(); // Refresh the orders\r\n          this.closeAddModal();\r\n        } catch (error) {\r\n          console.error('Error creating order:', error);\r\n          alert('Failed to create order. Please try again.');\r\n        }\r\n      } else {\r\n        alert('Please fill in all required fields.');\r\n      }\r\n    },\r\n\r\n    // Validate form data\r\n    isValidForm() {\r\n      return this.orderForm.orderDate && this.orderForm.orderStatus &&\r\n          this.orderForm.paymentMethod && this.orderForm.totalAmount;\r\n    },\r\n\r\n    // Update an existing order\r\n    async updateOrder() {\r\n      if (this.isValidForm()) {\r\n        try {\r\n          await updateOrder(this.selectedOrder.orderID, this.selectedOrder);\r\n          this.fetchOrders(); // Refresh the orders\r\n          this.closeUpdateModal();\r\n        } catch (error) {\r\n          console.error('Error updating order:', error);\r\n          alert('Failed to update order.');\r\n        }\r\n      }\r\n    },\r\n\r\n    // Delete an order\r\n    async deleteOrder(orderID) {\r\n      if (confirm('Are you sure you want to delete this order?')) {\r\n        try {\r\n          await deleteOrder(orderID);\r\n          this.fetchOrders(); // Refresh the orders\r\n        } catch (error) {\r\n          console.error('Error deleting order:', error);\r\n          alert('Failed to delete order.');\r\n        }\r\n      }\r\n    },\r\n\r\n    // Open Add Order Modal\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n      this.resetOrderForm();\r\n    },\r\n\r\n    // Close Add Order Modal\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n\r\n    // Open Update Order Modal\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = { ...order }; // Create a copy of the order to avoid binding issues\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n\r\n    // Close Update Order Modal\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n\r\n    // Reset order form after modal close\r\n    resetOrderForm() {\r\n      this.orderForm = {\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        totalAmount: ''\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders(); // Fetch orders when the component is mounted\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add your styling here */\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}