{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-48902ef6\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_2 = {\n  class: \"modal-content\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Update Customer\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"firstName\"\n}, \"First Name\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"lastName\"\n}, \"Last Name\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone\"\n}, \"Phone\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"No customer selected for update\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $props.isVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", {\n    class: \"close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, \"Ã—\"), _hoisted_3, _createCommentVNode(\" Only show the form if customer data is available \"), $props.customer ? (_openBlock(), _createElementBlock(\"form\", _hoisted_4, [_createElementVNode(\"div\", null, [_hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.updatedCustomer.firstName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedCustomer.firstName]])]), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"lastName\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.updatedCustomer.lastName = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedCustomer.lastName]])]), _createElementVNode(\"div\", null, [_hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.updatedCustomer.contact.email = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedCustomer.contact.email]])]), _createElementVNode(\"div\", null, [_hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.updatedCustomer.contact.phoneNumber = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.updatedCustomer.contact.phoneNumber]])]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.submitUpdate && $options.submitUpdate(...args))\n  }, \"Update Customer\"), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.closeModal && $options.closeModal(...args))\n  }, \"Cancel\")])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Display a message if customer is null \"), _hoisted_9], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","for","$props","isVisible","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","$event","_ctx","$emit","_hoisted_3","_createCommentVNode","customer","_hoisted_4","_hoisted_5","type","id","$data","updatedCustomer","firstName","_hoisted_6","lastName","_hoisted_7","contact","email","_hoisted_8","phoneNumber","args","$options","submitUpdate","closeModal","_Fragment","_hoisted_9"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\modals\\UpdateCustomerModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isVisible\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"$emit('close')\">&times;</span>\r\n\r\n      <h3>Update Customer</h3>\r\n\r\n      <!-- Only show the form if customer data is available -->\r\n      <form v-if=\"customer\">\r\n        <div>\r\n          <label for=\"firstName\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" v-model=\"updatedCustomer.firstName\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input type=\"text\" id=\"lastName\" v-model=\"updatedCustomer.lastName\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"updatedCustomer.contact.email\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"phone\">Phone</label>\r\n          <input type=\"tel\" id=\"phone\" v-model=\"updatedCustomer.contact.phoneNumber\" />\r\n        </div>\r\n\r\n        <button type=\"button\" @click=\"submitUpdate\">Update Customer</button>\r\n        <button type=\"button\" @click=\"closeModal\">Cancel</button>\r\n      </form>\r\n\r\n      <!-- Display a message if customer is null -->\r\n      <p v-else>No customer selected for update</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    customer: {\r\n      type: Object,\r\n      default: () => null, // Default to null to avoid type errors\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // Create a copy of the customer data to modify without affecting the original object\r\n      updatedCustomer: this.customer ? { ...this.customer } : {}\r\n    };\r\n  },\r\n  watch: {\r\n    // Update the form data when the customer prop changes\r\n    customer(newCustomer) {\r\n      if (newCustomer) {\r\n        this.updatedCustomer = { ...newCustomer };\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    submitUpdate() {\r\n      // Emit the updated customer data back to the parent component\r\n      this.$emit('update-customer', this.customer.userId, this.updatedCustomer);\r\n      this.$emit('close'); // Close the modal after submission\r\n\r\n    },\r\n    closeModal() {\r\n      // Emit the close event to close the modal\r\n      this.$emit('close');\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add some basic styles for the modal */\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACwBC,KAAK,EAAC;;;EACrBA,KAAK,EAAC;AAAe;gEAGxBC,mBAAA,CAAwB,YAApB,iBAAe;;EALzBF,GAAA;AAAA;gEAUUE,mBAAA,CAAyC;EAAlCC,GAAG,EAAC;AAAW,GAAC,YAAU;gEAKjCD,mBAAA,CAAuC;EAAhCC,GAAG,EAAC;AAAU,GAAC,WAAS;gEAK/BD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gEAKxBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gEAS5BD,mBAAA,CAA6C,WAAnC,iCAA+B;;SAjClCE,MAAA,CAAAC,SAAS,I,cAApBC,mBAAA,CAmCM,OAnCNC,UAmCM,GAlCJL,mBAAA,CAiCM,OAjCNM,UAiCM,GAhCJN,mBAAA,CAA0D;IAApDD,KAAK,EAAC,OAAO;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK;KAAW,GAAO,GAEnDC,UAAwB,EAExBC,mBAAA,sDAAyD,EAC7CX,MAAA,CAAAY,QAAQ,I,cAApBV,mBAAA,CAuBO,QA/BbW,UAAA,GASQf,mBAAA,CAGM,cAFJgB,UAAyC,E,gBACzChB,mBAAA,CAAwE;IAAjEiB,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,WAAW;IAX3C,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAWqDU,KAAA,CAAAC,eAAe,CAACC,SAAS,GAAAZ,MAAA;iDAAzBU,KAAA,CAAAC,eAAe,CAACC,SAAS,E,KAGtErB,mBAAA,CAGM,cAFJsB,UAAuC,E,gBACvCtB,mBAAA,CAAsE;IAA/DiB,IAAI,EAAC,MAAM;IAACC,EAAE,EAAC,UAAU;IAhB1C,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBoDU,KAAA,CAAAC,eAAe,CAACG,QAAQ,GAAAd,MAAA;iDAAxBU,KAAA,CAAAC,eAAe,CAACG,QAAQ,E,KAGpEvB,mBAAA,CAGM,cAFJwB,UAAgC,E,gBAChCxB,mBAAA,CAAyE;IAAlEiB,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IArBxC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAqBkDU,KAAA,CAAAC,eAAe,CAACK,OAAO,CAACC,KAAK,GAAAjB,MAAA;iDAA7BU,KAAA,CAAAC,eAAe,CAACK,OAAO,CAACC,KAAK,E,KAGvE1B,mBAAA,CAGM,cAFJ2B,UAAgC,E,gBAChC3B,mBAAA,CAA6E;IAAtEiB,IAAI,EAAC,KAAK;IAACC,EAAE,EAAC,OAAO;IA1BtC,uBAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA0BgDU,KAAA,CAAAC,eAAe,CAACK,OAAO,CAACG,WAAW,GAAAnB,MAAA;iDAAnCU,KAAA,CAAAC,eAAe,CAACK,OAAO,CAACG,WAAW,E,KAG3E5B,mBAAA,CAAoE;IAA5DiB,IAAI,EAAC,QAAQ;IAAEV,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAqB,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,iBAAe,GAC3D7B,mBAAA,CAAyD;IAAjDiB,IAAI,EAAC,QAAQ;IAAEV,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAqB,IAAA,KAAEC,QAAA,CAAAE,UAAA,IAAAF,QAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;KAAE,QAAM,E,oBAIlDzB,mBAAA,CAA6C6B,SAAA;IAlCnDnC,GAAA;EAAA,IAiCMe,mBAAA,2CAA8C,EAC9CqB,UAA6C,C,yDAlCnDrB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}