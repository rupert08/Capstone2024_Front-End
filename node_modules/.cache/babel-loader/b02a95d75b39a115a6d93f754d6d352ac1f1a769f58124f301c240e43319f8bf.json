{"ast":null,"code":"import { getOrders, createOrder } from '@/services/orderService';\nexport default {\n  data() {\n    return {\n      isAddModalVisible: false,\n      orders: [],\n      orderForm: {\n        orderDate: '',\n        orderStatus: '',\n        paymentMethod: '',\n        shippingOrCollected: false,\n        totalAmount: 0\n      }\n    };\n  },\n  computed: {\n    shippingOrCollectedString: {\n      get() {\n        return this.orderForm.shippingOrCollected ? 'Shipping' : 'Collected';\n      },\n      set(value) {\n        this.orderForm.shippingOrCollected = value === 'Shipping';\n      }\n    }\n  },\n  methods: {\n    openAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal() {\n      this.isAddModalVisible = false;\n    },\n    async submitOrder() {\n      try {\n        await createOrder(this.orderForm);\n        this.fetchOrders();\n        this.closeAddModal();\n      } catch (error) {\n        console.error('Error creating order:', error);\n      }\n    },\n    async fetchOrders() {\n      try {\n        this.orders = await getOrders();\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["getOrders","createOrder","data","isAddModalVisible","orders","orderForm","orderDate","orderStatus","paymentMethod","shippingOrCollected","totalAmount","computed","shippingOrCollectedString","get","set","value","methods","openAddModal","closeAddModal","submitOrder","fetchOrders","error","console","mounted"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Shipping/Collected</th>\r\n          <th>Total Amount</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.shippingOrCollected ? 'Shipping' : 'Collected' }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"isAddModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Add Order</h4>\r\n        <form @submit.prevent=\"submitOrder\">\r\n          <label for=\"orderDate\">Order Date:</label>\r\n          <input type=\"date\" v-model=\"orderForm.orderDate\" required />\r\n\r\n          <label for=\"orderStatus\">Order Status:</label>\r\n          <select v-model=\"orderForm.orderStatus\" required>\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"SHIPPED\">Shipped</option>\r\n            <option value=\"DELIVERED\">Delivered</option>\r\n            <option value=\"CANCELLED\">Cancelled</option>\r\n          </select>\r\n\r\n          <label for=\"paymentMethod\">Payment Method:</label>\r\n          <select v-model=\"orderForm.paymentMethod\" required>\r\n            <option value=\"CREDIT_CARD\">Credit Card</option>\r\n            <option value=\"DEBIT_CARD\">Debit Card</option>\r\n            <option value=\"PAYPAL\">PayPal</option>\r\n            <option value=\"CASH_ON_DELIVERY\">Cash on Delivery</option>\r\n          </select>\r\n\r\n          <label for=\"shipping\">Shipping:</label>\r\n          <select v-model=\"shippingOrCollectedString\" required>\r\n            <option value=\"Shipping\">Shipping</option>\r\n            <option value=\"Collected\">Collected</option>\r\n          </select>\r\n\r\n          <label for=\"totalAmount\">Total Amount:</label>\r\n          <input type=\"number\" v-model=\"orderForm.totalAmount\" required />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" @click=\"closeAddModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, createOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isAddModalVisible: false,\r\n      orders: [],\r\n      orderForm: {\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippingOrCollected: false,\r\n        totalAmount: 0\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    shippingOrCollectedString: {\r\n      get() {\r\n        return this.orderForm.shippingOrCollected ? 'Shipping' : 'Collected';\r\n      },\r\n      set(value) {\r\n        this.orderForm.shippingOrCollected = value === 'Shipping';\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    async submitOrder() {\r\n      try {\r\n        await createOrder(this.orderForm);\r\n        this.fetchOrders();\r\n        this.closeAddModal();\r\n      } catch (error) {\r\n        console.error('Error creating order:', error);\r\n      }\r\n    },\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAuEA,SAASA,SAAS,EAAEC,WAAU,QAAS,yBAAyB;AAEhE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,iBAAiB,EAAE,KAAK;MACxBC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,WAAW,EAAE,EAAE;QACfC,aAAa,EAAE,EAAE;QACjBC,mBAAmB,EAAE,KAAK;QAC1BC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,yBAAyB,EAAE;MACzBC,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACR,SAAS,CAACI,mBAAkB,GAAI,UAAS,GAAI,WAAW;MACtE,CAAC;MACDK,GAAGA,CAACC,KAAK,EAAE;QACT,IAAI,CAACV,SAAS,CAACI,mBAAkB,GAAIM,KAAI,KAAM,UAAU;MAC3D;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACd,iBAAgB,GAAI,IAAI;IAC/B,CAAC;IACDe,aAAaA,CAAA,EAAG;MACd,IAAI,CAACf,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACD,MAAMgB,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMlB,WAAW,CAAC,IAAI,CAACI,SAAS,CAAC;QACjC,IAAI,CAACe,WAAW,CAAC,CAAC;QAClB,IAAI,CAACF,aAAa,CAAC,CAAC;MACtB,EAAE,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACD,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAI,CAAChB,MAAK,GAAI,MAAMJ,SAAS,CAAC,CAAC;MACjC,EAAE,OAAOqB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,CAACH,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}