{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-95d81cca\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Order Management\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Orders\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\" Add your table headers here \"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Status\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Payment Method\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Total Amount\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */));\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"modal-content\"\n}, [/*#__PURE__*/_createCommentVNode(\" Add your form for adding an order here \")], -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UpdateOrderModal = _resolveComponent(\"UpdateOrderModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.openAddModal && $options.openAddModal(...args))\n  }, \"Add Order\"), _hoisted_3, _createElementVNode(\"table\", null, [_hoisted_4, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.orderID\n    }, [_createCommentVNode(\" Add your table data here \"), _createElementVNode(\"td\", null, _toDisplayString(order.orderID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentMethod), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openUpdateModal(order)\n    }, \"Update\", 8 /* PROPS */, _hoisted_5), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteOrder(order.orderID)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_6)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Add Order Modal \"), $data.isAddModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [..._hoisted_9])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Update Order Modal \"), _createVNode(_component_UpdateOrderModal, {\n    isVisible: $data.isUpdateModalVisible,\n    order: $data.selectedOrder,\n    onClose: $options.closeUpdateModal,\n    onUpdateOrder: $options.updateOrder\n  }, null, 8 /* PROPS */, [\"isVisible\", \"order\", \"onClose\", \"onUpdateOrder\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createCommentVNode","key","_hoisted_8","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","args","$options","openAddModal","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","orders","order","orderID","_toDisplayString","orderDate","orderStatus","paymentMethod","totalAmount","$event","openUpdateModal","_hoisted_5","deleteOrder","_hoisted_6","isAddModalVisible","_hoisted_7","_hoisted_9","_createVNode","_component_UpdateOrderModal","isVisible","isUpdateModalVisible","selectedOrder","onClose","closeUpdateModal","onUpdateOrder","updateOrder"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <!-- Add your table headers here -->\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Total Amount</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n          <!-- Add your table data here -->\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"deleteOrder(order.orderID)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"isAddModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <!-- Add your form for adding an order here -->\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Update Order Modal -->\r\n    <UpdateOrderModal\r\n      :isVisible=\"isUpdateModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeUpdateModal\"\r\n      @update-order=\"updateOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    UpdateOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      orders: [],\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  methods: {\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    async updateOrder(updatedOrder) {\r\n      try {\r\n        await updateOrder(updatedOrder.orderID, updatedOrder);\r\n        this.fetchOrders(); // Refresh the orders list after update\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    },\r\n    async deleteOrder(orderID) {\r\n      try {\r\n        await deleteOrder(orderID);\r\n        this.fetchOrders(); // Refresh the orders list after deletion\r\n      } catch (error) {\r\n        console.error('Error deleting order:', error);\r\n      }\r\n    },\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;;EACOA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAyB,YAArB,kBAAgB;gEAGpBA,mBAAA,CAAe,YAAX,QAAM;gEAERA,mBAAA,CAUQ,gB,aATNA,mBAAA,CAQK,a,aAPHC,mBAAA,iCAAoC,E,aACpCD,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAmB,YAAf,YAAU,G,aACdA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAAqB,YAAjB,cAAY,G,aAChBA,mBAAA,CAAgB,YAAZ,SAAO,E;mBAfrB;mBAAA;;EAAAE,GAAA;EAmCkCH,KAAK,EAAC;;gEAClCC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAe,I,aACxBE,mBAAA,4CAA+C,C;oBADjDE,UAEM,C;;;uBArCVC,mBAAA,CA+CM,OA/CNC,UA+CM,GA9CJC,UAAyB,EACzBN,mBAAA,CAAgD;IAAvCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,WAAS,GAEvCG,UAAe,EACfZ,mBAAA,CA0BQ,gBAzBNa,UAUQ,EACRb,mBAAA,CAaQ,iB,kBAZNI,mBAAA,CAWKU,SAAA,QA9BbC,WAAA,CAmB4BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBd,mBAAA,CAWK;MAXwBF,GAAG,EAAEgB,KAAK,CAACC;QACtClB,mBAAA,8BAAiC,EACjCD,mBAAA,CAA4B,YAAAoB,gBAAA,CAArBF,KAAK,CAACC,OAAO,kBACpBnB,mBAAA,CAA8B,YAAAoB,gBAAA,CAAvBF,KAAK,CAACG,SAAS,kBACtBrB,mBAAA,CAAgC,YAAAoB,gBAAA,CAAzBF,KAAK,CAACI,WAAW,kBACxBtB,mBAAA,CAAkC,YAAAoB,gBAAA,CAA3BF,KAAK,CAACK,aAAa,kBAC1BvB,mBAAA,CAAgC,YAAAoB,gBAAA,CAAzBF,KAAK,CAACM,WAAW,kBACxBxB,mBAAA,CAGK,aAFHA,mBAAA,CAAuD;MAA9CO,OAAK,EAAAkB,MAAA,IAAEf,QAAA,CAAAgB,eAAe,CAACR,KAAK;OAAG,QAAM,iBA3B1DS,UAAA,GA4BY3B,mBAAA,CAA2D;MAAlDO,OAAK,EAAAkB,MAAA,IAAEf,QAAA,CAAAkB,WAAW,CAACV,KAAK,CAACC,OAAO;OAAG,QAAM,iBA5B9DU,UAAA,E;sCAkCI5B,mBAAA,qBAAwB,EACbe,KAAA,CAAAc,iBAAiB,I,cAA5B1B,mBAAA,CAIM,OAJN2B,UAIM,EAvCV,IAAAC,UAAA,MAAA/B,mBAAA,gBAyCIA,mBAAA,wBAA2B,EAC3BgC,YAAA,CAKEC,2BAAA;IAJCC,SAAS,EAAEnB,KAAA,CAAAoB,oBAAoB;IAC/BlB,KAAK,EAAEF,KAAA,CAAAqB,aAAa;IACpBC,OAAK,EAAE5B,QAAA,CAAA6B,gBAAgB;IACvBC,aAAY,EAAE9B,QAAA,CAAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}