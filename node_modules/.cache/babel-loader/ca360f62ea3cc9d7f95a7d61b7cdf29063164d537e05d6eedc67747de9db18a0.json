{"ast":null,"code":"import UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\nimport DeleteOrderModal from '@/modals/DeleteOrderModal.vue';\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\nexport default {\n  components: {\n    UpdateOrderModal,\n    DeleteOrderModal\n  },\n  data() {\n    return {\n      orders: [],\n      isAddModalVisible: false,\n      isUpdateModalVisible: false,\n      isDeleteModalVisible: false,\n      selectedOrder: null,\n      orderForm: {\n        orderDate: '',\n        orderStatus: '',\n        paymentMethod: '',\n        shippingOrCollected: '',\n        totalAmount: '',\n        cartID: '',\n        shippingID: ''\n      }\n    };\n  },\n  methods: {\n    fetchOrders() {\n      getOrders().then(data => {\n        this.orders = data;\n      }).catch(error => {\n        console.error('Error fetching orders:', error);\n      });\n    },\n    openAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal() {\n      this.isAddModalVisible = false;\n    },\n    openUpdateModal(order) {\n      this.selectedOrder = order;\n      this.isUpdateModalVisible = true;\n    },\n    closeUpdateModal() {\n      this.isUpdateModalVisible = false;\n    },\n    openDeleteModal(order) {\n      this.selectedOrder = order;\n      this.isDeleteModalVisible = true;\n    },\n    closeDeleteModal() {\n      this.isDeleteModalVisible = false;\n    },\n    submitOrder() {\n      const order = {\n        ...this.orderForm\n      };\n      createOrder(order).then(() => {\n        this.fetchOrders();\n        this.closeAddModal();\n        this.resetForm();\n      }).catch(error => {\n        console.error('Error creating order:', error);\n      });\n    },\n    resetForm() {\n      this.orderForm = {\n        orderDate: '',\n        orderStatus: '',\n        paymentMethod: '',\n        shippingOrCollected: '',\n        totalAmount: '',\n        cartID: '',\n        shippingID: ''\n      };\n    },\n    updateOrder(updatedOrder) {\n      updateOrder(updatedOrder).then(() => {\n        this.fetchOrders();\n        this.closeUpdateModal();\n      }).catch(error => {\n        console.error('Error updating order:', error);\n      });\n    },\n    deleteOrder(orderId) {\n      deleteOrder(orderId).then(() => {\n        this.fetchOrders();\n        this.closeDeleteModal();\n      }).catch(error => {\n        console.error('Error deleting order:', error);\n      });\n    }\n  },\n  mounted() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["UpdateOrderModal","DeleteOrderModal","getOrders","createOrder","updateOrder","deleteOrder","components","data","orders","isAddModalVisible","isUpdateModalVisible","isDeleteModalVisible","selectedOrder","orderForm","orderDate","orderStatus","paymentMethod","shippingOrCollected","totalAmount","cartID","shippingID","methods","fetchOrders","then","catch","error","console","openAddModal","closeAddModal","openUpdateModal","order","closeUpdateModal","openDeleteModal","closeDeleteModal","submitOrder","resetForm","updatedOrder","orderId","mounted"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Shipping/Collected</th>\r\n          <th>Total Amount</th>\r\n          <th>Cart ID</th>\r\n          <th>Shipping ID</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in orders\" :key=\"order.id\">\r\n          <td>{{ order.orderID }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.shippingOrCollected }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>{{ order.cart.cartId }}</td>\r\n          <td>{{ order.shipping.shippingID }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"openDeleteModal(order)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Add Order Modal -->\r\n    <div v-if=\"isAddModalVisible\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <h4>Add Order</h4>\r\n        <form @submit.prevent=\"submitOrder\">\r\n          <label for=\"orderDate\">Order Date:</label>\r\n          <input type=\"date\" v-model=\"orderForm.orderDate\" required />\r\n\r\n          <label for=\"orderStatus\">Order Status:</label>\r\n          <select v-model=\"orderForm.orderStatus\" required>\r\n            <option value=\"PENDING\">Pending</option>\r\n            <option value=\"SHIPPED\">Shipped</option>\r\n            <option value=\"DELIVERED\">Delivered</option>\r\n            <option value=\"CANCELLED\">Cancelled</option>\r\n          </select>\r\n\r\n          <label for=\"paymentMethod\">Payment Method:</label>\r\n          <select v-model=\"orderForm.paymentMethod\" required>\r\n            <option value=\"CREDIT_CARD\">Credit Card</option>\r\n            <option value=\"DEBIT_CARD\">Debit Card</option>\r\n            <option value=\"PAYPAL\">PayPal</option>\r\n            <option value=\"CASH_ON_DELIVERY\">Cash on Delivery</option>\r\n          </select>\r\n\r\n          <label for=\"shipping\">Shipping:</label>\r\n          <input type=\"text\" v-model=\"orderForm.shippingOrCollected\" required />\r\n\r\n          <label for=\"totalAmount\">Total Amount:</label>\r\n          <input type=\"number\" v-model=\"orderForm.totalAmount\" required />\r\n\r\n          <label for=\"cartID\">Cart ID:</label>\r\n          <input type=\"number\" v-model=\"orderForm.cartID\" required />\r\n\r\n          <label for=\"shippingID\">Shipping ID:</label>\r\n          <input type=\"number\" v-model=\"orderForm.shippingID\" required />\r\n\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" @click=\"closeAddModal\">Cancel</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Update Order Modal -->\r\n    <UpdateOrderModal\r\n      :isVisible=\"isUpdateModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeUpdateModal\"\r\n      @update-order=\"updateOrder\"\r\n    />\r\n\r\n    <!-- Delete Order Modal -->\r\n    <DeleteOrderModal\r\n      :isVisible=\"isDeleteModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeDeleteModal\"\r\n      @delete-order=\"deleteOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\r\nimport DeleteOrderModal from '@/modals/DeleteOrderModal.vue';\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  components: {\r\n    UpdateOrderModal,\r\n    DeleteOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      isDeleteModalVisible: false,\r\n      selectedOrder: null,\r\n      orderForm: {\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippingOrCollected: '',\r\n        totalAmount: '',\r\n        cartID: '',\r\n        shippingID: ''\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    fetchOrders() {\r\n      getOrders()\r\n        .then(data => {\r\n          this.orders = data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching orders:', error);\r\n        });\r\n    },\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    openDeleteModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isDeleteModalVisible = true;\r\n    },\r\n    closeDeleteModal() {\r\n      this.isDeleteModalVisible = false;\r\n    },\r\n    submitOrder() {\r\n      const order = { ...this.orderForm };\r\n      createOrder(order)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeAddModal();\r\n          this.resetForm();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error creating order:', error);\r\n        });\r\n    },\r\n    resetForm() {\r\n      this.orderForm = {\r\n        orderDate: '',\r\n        orderStatus: '',\r\n        paymentMethod: '',\r\n        shippingOrCollected: '',\r\n        totalAmount: '',\r\n        cartID: '',\r\n        shippingID: ''\r\n      };\r\n    },\r\n    updateOrder(updatedOrder) {\r\n      updateOrder(updatedOrder)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeUpdateModal();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating order:', error);\r\n        });\r\n    },\r\n    deleteOrder(orderId) {\r\n      deleteOrder(orderId)\r\n        .then(() => {\r\n          this.fetchOrders();\r\n          this.closeDeleteModal();\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting order:', error);\r\n        });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-management {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: auto;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  border: 1px solid #888;\r\n  width: 50%;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}