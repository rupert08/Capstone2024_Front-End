{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f57b767\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Categories\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [_createCommentVNode(\" Display categories in the template \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.categories, category => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: category.id\n    }, _toDisplayString(category.name), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","categories","category","key","id","name"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\CategoryPage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Categories</h1>\r\n    <ul>\r\n      <!-- Display categories in the template -->\r\n      <li v-for=\"category in categories\" :key=\"category.id\">\r\n        {{ category.name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getCategories } from '@/services/categoryService'; // Import the named function\r\n\r\nexport default {\r\n  name: 'CategoryPage',\r\n  data() {\r\n    return {\r\n      categories: []  // Initialize categories array\r\n    };\r\n  },\r\n  async created() {\r\n    try {\r\n      this.categories = await getCategories();  // Fetch categories on component creation\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error); \r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Add styles here */\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAmB,YAAf,YAAU;;uBADhBC,mBAAA,CAQM,cAPJC,UAAmB,EACnBF,mBAAA,CAKK,aAJHG,mBAAA,wCAA2C,G,kBAC3CF,mBAAA,CAEKG,SAAA,QAPXC,WAAA,CAK6BC,KAAA,CAAAC,UAAU,EAAtBC,QAAQ;yBAAnBP,mBAAA,CAEK;MAF+BQ,GAAG,EAAED,QAAQ,CAACE;wBAC7CF,QAAQ,CAACG,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}