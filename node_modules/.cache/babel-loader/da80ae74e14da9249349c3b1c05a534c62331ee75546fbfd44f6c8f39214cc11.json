{"ast":null,"code":"import AddOrderModal from '@/components/AddOrderModal.vue';\nimport UpdateOrderModal from '@/components/UpdateOrderModal.vue';\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\nexport default {\n  components: {\n    AddOrderModal,\n    UpdateOrderModal\n  },\n  data() {\n    return {\n      orders: [],\n      recentOrders: [],\n      searchQuery: '',\n      isAddModalVisible: false,\n      isUpdateModalVisible: false,\n      selectedOrder: null\n    };\n  },\n  async created() {\n    await this.fetchOrders();\n  },\n  computed: {\n    filteredOrders() {\n      return this.orders.filter(order => {\n        const query = this.searchQuery.toLowerCase();\n        return order.id.toString().includes(query) || order.orderDate.toLowerCase().includes(query) || order.orderStatus.toLowerCase().includes(query) || order.paymentMethod.toLowerCase().includes(query) || order.shippingOrCollected.toLowerCase().includes(query) || order.totalAmount.toString().includes(query) || order.cartID.toString().includes(query) || order.shippingID.toString().includes(query);\n      });\n    }\n  },\n  methods: {\n    async fetchOrders() {\n      try {\n        const orders = await getOrders();\n        this.orders = orders;\n        this.recentOrders = orders.slice(-3).reverse();\n      } catch (error) {\n        console.error('Error fetching orders:', error);\n      }\n    },\n    openAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal() {\n      this.isAddModalVisible = false;\n    },\n    openUpdateModal(order) {\n      this.selectedOrder = order;\n      this.isUpdateModalVisible = true;\n    },\n    closeUpdateModal() {\n      this.isUpdateModalVisible = false;\n    },\n    async addOrder(newOrder) {\n      try {\n        await createOrder(newOrder);\n        await this.fetchOrders();\n        this.closeAddModal();\n      } catch (error) {\n        console.error('Error adding order:', error);\n      }\n    },\n    async updateOrder(updatedOrder) {\n      try {\n        await updateOrder(updatedOrder);\n        await this.fetchOrders();\n        this.closeUpdateModal();\n      } catch (error) {\n        console.error('Error updating order:', error);\n      }\n    },\n    async removeOrder(orderId) {\n      if (confirm('Are you sure you want to delete this order?')) {\n        try {\n          await deleteOrder(orderId);\n          await this.fetchOrders();\n        } catch (error) {\n          console.error('Error deleting order:', error);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["AddOrderModal","UpdateOrderModal","getOrders","createOrder","updateOrder","deleteOrder","components","data","orders","recentOrders","searchQuery","isAddModalVisible","isUpdateModalVisible","selectedOrder","created","fetchOrders","computed","filteredOrders","filter","order","query","toLowerCase","id","toString","includes","orderDate","orderStatus","paymentMethod","shippingOrCollected","totalAmount","cartID","shippingID","methods","slice","reverse","error","console","openAddModal","closeAddModal","openUpdateModal","closeUpdateModal","addOrder","newOrder","updatedOrder","removeOrder","orderId","confirm"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n    <button @click=\"openAddModal\">Add Order</button>\r\n    <input type=\"text\" v-model=\"searchQuery\" placeholder=\"Search orders...\" />\r\n\r\n    <h2>Recent Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Total Amount</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in recentOrders\" :key=\"order.id\">\r\n          <td>{{ order.id }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"removeOrder(order.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <h2>All Orders</h2>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Order ID</th>\r\n          <th>Order Date</th>\r\n          <th>Order Status</th>\r\n          <th>Payment Method</th>\r\n          <th>Shipping</th>\r\n          <th>Total Amount</th>\r\n          <th>Cart ID</th>\r\n          <th>Shipping ID</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"order in filteredOrders\" :key=\"order.id\">\r\n          <td>{{ order.id }}</td>\r\n          <td>{{ order.orderDate }}</td>\r\n          <td>{{ order.orderStatus }}</td>\r\n          <td>{{ order.paymentMethod }}</td>\r\n          <td>{{ order.shippingOrCollected }}</td>\r\n          <td>{{ order.totalAmount }}</td>\r\n          <td>{{ order.cartID }}</td>\r\n          <td>{{ order.shippingID }}</td>\r\n          <td>\r\n            <button @click=\"openUpdateModal(order)\">Update</button>\r\n            <button @click=\"removeOrder(order.id)\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Modals -->\r\n    <AddOrderModal\r\n      :isVisible=\"isAddModalVisible\"\r\n      @close=\"closeAddModal\"\r\n      @add=\"addOrder\"\r\n    />\r\n    <UpdateOrderModal\r\n      :isVisible=\"isUpdateModalVisible\"\r\n      :order=\"selectedOrder\"\r\n      @close=\"closeUpdateModal\"\r\n      @update-order=\"updateOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AddOrderModal from '@/components/AddOrderModal.vue';\r\nimport UpdateOrderModal from '@/components/UpdateOrderModal.vue';\r\nimport { getOrders, createOrder, updateOrder, deleteOrder } from '@/services/orderService';\r\n\r\nexport default {\r\n  components: {\r\n    AddOrderModal,\r\n    UpdateOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      orders: [],\r\n      recentOrders: [],\r\n      searchQuery: '',\r\n      isAddModalVisible: false,\r\n      isUpdateModalVisible: false,\r\n      selectedOrder: null\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchOrders();\r\n  },\r\n  computed: {\r\n    filteredOrders() {\r\n      return this.orders.filter(order => {\r\n        const query = this.searchQuery.toLowerCase();\r\n        return (\r\n          order.id.toString().includes(query) ||\r\n          order.orderDate.toLowerCase().includes(query) ||\r\n          order.orderStatus.toLowerCase().includes(query) ||\r\n          order.paymentMethod.toLowerCase().includes(query) ||\r\n          order.shippingOrCollected.toLowerCase().includes(query) ||\r\n          order.totalAmount.toString().includes(query) ||\r\n          order.cartID.toString().includes(query) ||\r\n          order.shippingID.toString().includes(query)\r\n        );\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchOrders() {\r\n      try {\r\n        const orders = await getOrders();\r\n        this.orders = orders;\r\n        this.recentOrders = orders.slice(-3).reverse();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    },\r\n    openAddModal() {\r\n      this.isAddModalVisible = true;\r\n    },\r\n    closeAddModal() {\r\n      this.isAddModalVisible = false;\r\n    },\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    async addOrder(newOrder) {\r\n      try {\r\n        await createOrder(newOrder);\r\n        await this.fetchOrders();\r\n        this.closeAddModal();\r\n      } catch (error) {\r\n        console.error('Error adding order:', error);\r\n      }\r\n    },\r\n    async updateOrder(updatedOrder) {\r\n      try {\r\n        await updateOrder(updatedOrder);\r\n        await this.fetchOrders();\r\n        this.closeUpdateModal();\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    },\r\n    async removeOrder(orderId) {\r\n      if (confirm('Are you sure you want to delete this order?')) {\r\n        try {\r\n          await deleteOrder(orderId);\r\n          await this.fetchOrders();\r\n        } catch (error) {\r\n          console.error('Error deleting order:', error);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.order-management {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  background-color: #3498db;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #2980b9;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  margin-bottom: 20px;\r\n  padding: 10px;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}