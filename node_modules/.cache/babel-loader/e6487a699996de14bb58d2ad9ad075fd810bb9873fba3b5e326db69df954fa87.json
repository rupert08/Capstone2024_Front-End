{"ast":null,"code":"export default {\n  props: {\n    isVisible: {\n      type: Boolean,\n      required: true\n    },\n    customer: {\n      type: Object,\n      default: () => null\n    }\n  },\n  data() {\n    return {\n      updatedCustomer: this.customer ? {\n        ...this.customer\n      } : {},\n      updatedCustomerContact: this.customer?.contact ? {\n        ...this.customer.contact\n      } : {}\n    };\n  },\n  watch: {\n    customer(newCustomer) {\n      if (newCustomer) {\n        this.updatedCustomer = {\n          ...newCustomer\n        };\n        this.updatedCustomerContact = {\n          ...newCustomer.contact\n        };\n      }\n    }\n  },\n  methods: {\n    submitUpdate() {\n      this.updatedCustomer.contact = this.updatedCustomerContact;\n      this.$emit(\"update-customer\", this.customer.userId, this.updatedCustomer);\n      this.$emit(\"close\");\n    },\n    closeModal() {\n      this.$emit(\"close\");\n    }\n  }\n};","map":{"version":3,"names":["props","isVisible","type","Boolean","required","customer","Object","default","data","updatedCustomer","updatedCustomerContact","contact","watch","newCustomer","methods","submitUpdate","$emit","userId","closeModal"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\modals\\UpdateCustomerModal.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"isVisible\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <span class=\"close\" @click=\"$emit('close')\">&times;</span>\r\n\r\n      <h3>Update Customer</h3>\r\n\r\n      <form v-if=\"customer\">\r\n        <div>\r\n          <label for=\"firstName\">First Name</label>\r\n          <input type=\"text\" id=\"firstName\" v-model=\"updatedCustomer.firstName\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"lastName\">Last Name</label>\r\n          <input type=\"text\" id=\"lastName\" v-model=\"updatedCustomer.lastName\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"updatedCustomerContact.email\" />\r\n        </div>\r\n\r\n        <div>\r\n          <label for=\"phone\">Phone</label>\r\n          <input type=\"tel\" id=\"phone\" v-model=\"updatedCustomerContact.phoneNumber\" />\r\n        </div>\r\n\r\n        <button type=\"button\" @click=\"submitUpdate\">Update Customer</button>\r\n        <button type=\"button\" @click=\"closeModal\">Cancel</button>\r\n      </form>\r\n\r\n      <!-- Display a message if customer is null -->\r\n      <p v-else>No customer selected for update</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    isVisible: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    customer: {\r\n      type: Object,\r\n      default: () => null,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      updatedCustomer: this.customer ? { ...this.customer } : {},\r\n      updatedCustomerContact: this.customer?.contact\r\n          ? { ...this.customer.contact }\r\n          : {},\r\n    };\r\n  },\r\n  watch: {\r\n\r\n    customer(newCustomer) {\r\n      if (newCustomer) {\r\n        this.updatedCustomer = { ...newCustomer };\r\n        this.updatedCustomerContact = { ...newCustomer.contact };\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    submitUpdate() {\r\n      this.updatedCustomer.contact = this.updatedCustomerContact;\r\n\r\n      this.$emit(\"update-customer\", this.customer.userId, this.updatedCustomer);\r\n      this.$emit(\"close\");\r\n    },\r\n    closeModal() {\r\n      this.$emit(\"close\");\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":"AAuCA,eAAe;EACbA,KAAK,EAAE;IACLC,SAAS,EAAE;MACTC,IAAI,EAAEC,OAAO;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAEA,CAAA,KAAM;IACjB;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,IAAI,CAACJ,QAAO,GAAI;QAAE,GAAG,IAAI,CAACA;MAAS,IAAI,CAAC,CAAC;MAC1DK,sBAAsB,EAAE,IAAI,CAACL,QAAQ,EAAEM,OAAM,GACvC;QAAE,GAAG,IAAI,CAACN,QAAQ,CAACM;MAAQ,IAC3B,CAAC;IACT,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IAELP,QAAQA,CAACQ,WAAW,EAAE;MACpB,IAAIA,WAAW,EAAE;QACf,IAAI,CAACJ,eAAc,GAAI;UAAE,GAAGI;QAAY,CAAC;QACzC,IAAI,CAACH,sBAAqB,GAAI;UAAE,GAAGG,WAAW,CAACF;QAAQ,CAAC;MAC1D;IACF;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACN,eAAe,CAACE,OAAM,GAAI,IAAI,CAACD,sBAAsB;MAE1D,IAAI,CAACM,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACX,QAAQ,CAACY,MAAM,EAAE,IAAI,CAACR,eAAe,CAAC;MACzE,IAAI,CAACO,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IACDE,UAAUA,CAAA,EAAG;MACX,IAAI,CAACF,KAAK,CAAC,OAAO,CAAC;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}