{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order-management\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UpdateOrderModal = _resolveComponent(\"UpdateOrderModal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Order Management\", -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"h2\", null, \"Orders\", -1 /* HOISTED */)), _createElementVNode(\"table\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Order ID\"), _createElementVNode(\"th\", null, \"Order Date\"), _createElementVNode(\"th\", null, \"Order Status\"), _createElementVNode(\"th\", null, \"Payment Method\"), _createElementVNode(\"th\", null, \"Shipping/Collected\"), _createElementVNode(\"th\", null, \"Total Amount\"), _createElementVNode(\"th\", null, \"Actions\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orders, order => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: order.orderID\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentMethod), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.shippingOrCollected ? 'Shipping' : 'Collected'), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.totalAmount), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.openUpdateModal(order)\n    }, \"Update\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteOrder(order.orderID)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_3)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createCommentVNode(\" Update Order Modal \"), _createVNode(_component_UpdateOrderModal, {\n    isVisible: $data.isUpdateModalVisible,\n    order: $data.selectedOrder,\n    onClose: $options.closeUpdateModal,\n    onUpdateOrder: $options.updateOrder\n  }, null, 8 /* PROPS */, [\"isVisible\", \"order\", \"onClose\", \"onUpdateOrder\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$data","orders","order","key","orderID","_toDisplayString","orderDate","orderStatus","paymentMethod","shippingOrCollected","totalAmount","onClick","$event","$options","openUpdateModal","_hoisted_2","deleteOrder","_hoisted_3","_createCommentVNode","_createVNode","_component_UpdateOrderModal","isVisible","isUpdateModalVisible","selectedOrder","onClose","closeUpdateModal","onUpdateOrder","updateOrder"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\adminviews\\OrderManagement.vue"],"sourcesContent":["<template>\r\n  <div class=\"order-management\">\r\n    <h1>Order Management</h1>\r\n\r\n    <h2>Orders</h2>\r\n    <table>\r\n      <thead>\r\n      <tr>\r\n        <th>Order ID</th>\r\n        <th>Order Date</th>\r\n        <th>Order Status</th>\r\n        <th>Payment Method</th>\r\n        <th>Shipping/Collected</th>\r\n        <th>Total Amount</th>\r\n        <th>Actions</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"order in orders\" :key=\"order.orderID\">\r\n        <td>{{ order.orderID }}</td>\r\n        <td>{{ order.orderDate }}</td>\r\n        <td>{{ order.orderStatus }}</td>\r\n        <td>{{ order.paymentMethod }}</td>\r\n        <td>{{ order.shippingOrCollected ? 'Shipping' : 'Collected' }}</td>\r\n        <td>{{ order.totalAmount }}</td>\r\n        <td>\r\n          <button @click=\"openUpdateModal(order)\">Update</button>\r\n          <button @click=\"deleteOrder(order.orderID)\">Delete</button>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <!-- Update Order Modal -->\r\n    <UpdateOrderModal\r\n        :isVisible=\"isUpdateModalVisible\"\r\n        :order=\"selectedOrder\"\r\n        @close=\"closeUpdateModal\"\r\n        @update-order=\"updateOrder\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getOrders, /*createOrder,*/ updateOrder, deleteOrder } from '@/services/orderService';\r\nimport UpdateOrderModal from '@/modals/UpdateOrderModal.vue';\r\n\r\nexport default {\r\n  components: {\r\n    UpdateOrderModal\r\n  },\r\n  data() {\r\n    return {\r\n      isUpdateModalVisible: false,\r\n      orders: [],\r\n      selectedOrder: null,\r\n    };\r\n  },\r\n  methods: {\r\n    openUpdateModal(order) {\r\n      this.selectedOrder = order;\r\n      this.isUpdateModalVisible = true;\r\n    },\r\n    closeUpdateModal() {\r\n      this.isUpdateModalVisible = false;\r\n    },\r\n    async updateOrder(orderID, updatedOrder) {\r\n      try {\r\n        await updateOrder(orderID, updatedOrder);\r\n        await this.fetchOrders();\r\n        this.closeUpdateModal();\r\n      } catch (error) {\r\n        console.error('Error updating order:', error);\r\n      }\r\n    },\r\n    async deleteOrder(orderID) {\r\n      try {\r\n        await deleteOrder(orderID);\r\n        await this.fetchOrders();\r\n      } catch (error) {\r\n        console.error('Error deleting order:', error);\r\n      }\r\n    },\r\n    async fetchOrders() {\r\n      try {\r\n        this.orders = await getOrders();\r\n      } catch (error) {\r\n        console.error('Error fetching orders:', error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchOrders();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.modal {\r\n  display: block;\r\n  position: fixed;\r\n  z-index: 1000;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.modal-content {\r\n  position: relative;\r\n  margin: 10% auto;\r\n  padding: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n  border-radius: 8px;\r\n}\r\n\r\n.close {\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAkB;mBAD/B;mBAAA;;;uBACEC,mBAAA,CAuCM,OAvCNC,UAuCM,G,0BAtCJC,mBAAA,CAAyB,YAArB,kBAAgB,sB,0BAEpBA,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CA0BQ,gB,0BAzBNA,mBAAA,CAUQ,gBATRA,mBAAA,CAQK,aAPHA,mBAAA,CAAiB,YAAb,UAAQ,GACZA,mBAAA,CAAmB,YAAf,YAAU,GACdA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAA2B,YAAvB,oBAAkB,GACtBA,mBAAA,CAAqB,YAAjB,cAAY,GAChBA,mBAAA,CAAgB,YAAZ,SAAO,E,wBAGbA,mBAAA,CAaQ,iB,kBAZRF,mBAAA,CAWKG,SAAA,QA7BXC,WAAA,CAkB0BC,KAAA,CAAAC,MAAM,EAAfC,KAAK;yBAAhBP,mBAAA,CAWK;MAXwBQ,GAAG,EAAED,KAAK,CAACE;QACtCP,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBH,KAAK,CAACE,OAAO,kBACpBP,mBAAA,CAA8B,YAAAQ,gBAAA,CAAvBH,KAAK,CAACI,SAAS,kBACtBT,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBH,KAAK,CAACK,WAAW,kBACxBV,mBAAA,CAAkC,YAAAQ,gBAAA,CAA3BH,KAAK,CAACM,aAAa,kBAC1BX,mBAAA,CAAmE,YAAAQ,gBAAA,CAA5DH,KAAK,CAACO,mBAAmB,6CAChCZ,mBAAA,CAAgC,YAAAQ,gBAAA,CAAzBH,KAAK,CAACQ,WAAW,kBACxBb,mBAAA,CAGK,aAFHA,mBAAA,CAAuD;MAA9Cc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,CAACZ,KAAK;OAAG,QAAM,iBA1BxDa,UAAA,GA2BUlB,mBAAA,CAA2D;MAAlDc,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAG,WAAW,CAACd,KAAK,CAACE,OAAO;OAAG,QAAM,iBA3B5Da,UAAA,E;sCAiCIC,mBAAA,wBAA2B,EAC3BC,YAAA,CAKEC,2BAAA;IAJGC,SAAS,EAAErB,KAAA,CAAAsB,oBAAoB;IAC/BpB,KAAK,EAAEF,KAAA,CAAAuB,aAAa;IACpBC,OAAK,EAAEX,QAAA,CAAAY,gBAAgB;IACvBC,aAAY,EAAEb,QAAA,CAAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}