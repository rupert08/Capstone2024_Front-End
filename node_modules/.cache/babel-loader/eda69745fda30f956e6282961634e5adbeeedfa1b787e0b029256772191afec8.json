{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { loginAdmin } from '@/services/loginService';\nexport default {\n  name: 'LoginPage',\n  data() {\n    return {\n      username: '',\n      password: '',\n      message: ''\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const loginData = {\n          username: this.username,\n          password: this.password\n        };\n        const response = await loginAdmin(loginData);\n        if (response.status === 200) {\n          this.$router.push({\n            name: 'AdminDashboard'\n          });\n        } else if (response.status === 412) {\n          this.message = 'Invalid email or password.';\n        } else {\n          this.message = `An error occurred: ${response.status}`;\n        }\n      } catch (error) {\n        // Detailed error message\n        this.message = `Failed to login: ${error.response ? error.response.data.message : 'Connection error'}`;\n      }\n    },\n    cancel() {\n      window.history.back();\n    }\n  }\n};","map":{"version":3,"names":["loginAdmin","name","data","username","password","message","methods","login","loginData","response","status","$router","push","error","cancel","window","history","back"],"sources":["C:\\Users\\Rupert\\Desktop\\Capstone2024_Front-End\\src\\views\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <header class=\"header\">\r\n      <h1 class=\"center-align\">Login</h1>\r\n    </header>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input id=\"username\" type=\"email\" v-model=\"username\" required>\r\n          <label for=\"username\">Email</label>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <input id=\"password\" type=\"password\" v-model=\"password\" required>\r\n          <label for=\"password\">Password</label>\r\n        </div>\r\n      </div>\r\n      <button class=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Login</button>\r\n      <button class=\"btn btn-secondary waves-effect waves-light\" type=\"button\" @click=\"cancel\">Back</button>\r\n    </form>\r\n    <p v-if=\"message\">{{ message }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { loginAdmin } from '@/services/loginService'; \r\n\r\nexport default {\r\n  name: 'LoginPage',\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      message: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n  try {\r\n    const loginData = {\r\n      username: this.username,\r\n      password: this.password\r\n    };\r\n    const response = await loginAdmin(loginData);\r\n\r\n    if (response.status === 200) {\r\n      this.$router.push({ name: 'AdminDashboard' });\r\n    } else if (response.status === 412) {\r\n      this.message = 'Invalid email or password.';\r\n    } else {\r\n      this.message = `An error occurred: ${response.status}`;\r\n    }\r\n  } catch (error) {\r\n    // Detailed error message\r\n    this.message = `Failed to login: ${error.response ? error.response.data.message : 'Connection error'}`;\r\n  }\r\n},\r\n    cancel() {\r\n      window.history.back();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Styles remain the same */\r\n</style>\r\n"],"mappings":";AA0BA,SAASA,UAAS,QAAS,yBAAyB;AAEpD,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MAChB,IAAI;QACF,MAAMC,SAAQ,GAAI;UAChBL,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC;QACD,MAAMK,QAAO,GAAI,MAAMT,UAAU,CAACQ,SAAS,CAAC;QAE5C,IAAIC,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;YAAEX,IAAI,EAAE;UAAiB,CAAC,CAAC;QAC/C,OAAO,IAAIQ,QAAQ,CAACC,MAAK,KAAM,GAAG,EAAE;UAClC,IAAI,CAACL,OAAM,GAAI,4BAA4B;QAC7C,OAAO;UACL,IAAI,CAACA,OAAM,GAAI,sBAAsBI,QAAQ,CAACC,MAAM,EAAE;QACxD;MACF,EAAE,OAAOG,KAAK,EAAE;QACd;QACA,IAAI,CAACR,OAAM,GAAI,oBAAoBQ,KAAK,CAACJ,QAAO,GAAII,KAAK,CAACJ,QAAQ,CAACP,IAAI,CAACG,OAAM,GAAI,kBAAkB,EAAE;MACxG;IACF,CAAC;IACGS,MAAMA,CAAA,EAAG;MACPC,MAAM,CAACC,OAAO,CAACC,IAAI,CAAC,CAAC;IACvB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}